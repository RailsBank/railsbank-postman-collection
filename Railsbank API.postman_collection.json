{
	"info": {
		"name": "Railsbank API",
		"_postman_id": "8f2ad49c-65b4-3758-bbe2-af1c9bd1c811",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Railsbank API",
			"item": [
				{
					"name": "Whoami",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/me",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"me"
							]
						},
						"description": "also set test time stamp"
					},
					"response": []
				},
				{
					"name": "Get Version ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"if (responseCode.code === 200){",
									"    var jsonData = JSON.parse(responseBody);",
									"    var version = jsonData.version;",
									"    var info = new Date().toISOString() + \" | \"+version;",
									"    postman.setEnvironmentVariable(\"test_info\", info);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/version",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"version"
							]
						},
						"description": "also set test time stamp"
					},
					"response": []
				},
				{
					"name": "See Avaliable Partners",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/partners",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"partners"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an Enduser (individual)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduser_id\", jsonData.enduser_id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"person\": { \n       \"name\": \"Eric Wimp\", \n       \"email\": \"bananaman@example.net\", \n       \"date_of_birth\": \"1970-11-05\", \n       \"telephone\": \"+44 22 626 2626\", \n       \"address\": {  \n         \"address_refinement\": \"Apartment 42\", \n         \"address_number\": \"29\", \n         \"address_street\": \"Acacia Road\", \n         \"address_city\": \"Nuttytown\", \n         \"address_postal_code\": \"FX20 7XS\", \n         \"address_iso_country\": \"GBR\" \n       }, \n       \"address_history\": [ \n         { \n           \"address_refinement\": \"Apartment 77\", \n           \"address_number\": \"42\", \n           \"address_street\": \"Kirschbaumstra√üe\", \n           \"address_city\": \"Berlin\", \n           \"address_postal_code\": \"12059\", \n           \"address_iso_country\": \"DE\", \n           \"address_start_date\": \"2000-09-02\", \n           \"address_end_date\": \"2002-12-20\" \n         } \n       ], \n       \"nationality\": [ \n         \"Czech\" \n       ], \n       \"country_of_residence\": [ \n         \"GBR\" \n       ], \n       \"date_onboarded\": \"2015-11-21\" \n     }, \n      \"enduser_meta\": { \n       \"foo\": \"baa\", \n      \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\" \n     } \n   }'\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check List of Endusers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Details for an Enduser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enduser Wait",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a EUR Ledger for Enduser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_id\", jsonData.ledger_id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"{{euroledger_prodref}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status of Ledgers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var ledger_status = jsonData.ledger_status === \"ledger-status-ok\";",
									"tests[\"Ledger status ok\"] = ledger_status;",
									"",
									"if(!ledger_status){",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Waiting Status for Ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign an IBAN for ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/assign-iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}",
								"assign-iban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status of IBAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"iban\", jsonData.iban);",
									"postman.setEnvironmentVariable(\"current_balance\", jsonData.amount);",
									"",
									"var ledger_iban_status = jsonData.ledger_iban_status === \"ledger-iban-status-ok\";",
									"tests[\"IBAN status ok\"] = ledger_iban_status;",
									"",
									"if(!ledger_iban_status){",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Credit ledger with 10 EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"environment.delayTimerStart = new Date();"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"amount\": 10.00,\r\n  \"iban\": \"{{iban}}\",\r\n  \"bic_swift\": \"{{bic_swift_1}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/dev/customer/transactions/receive",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"dev",
								"customer",
								"transactions",
								"receive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Helper: Delay 10s",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/10",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "See Balance Change",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a New Beneficiary (Individual)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"beneficiary_id\", jsonData.beneficiary_id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"person\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"address_history\": [\r\n      {\r\n        \"address_refinement\": \"Apartment 77\",\r\n        \"address_number\": \"42\",\r\n        \"address_street\": \"Kirschbaumstra√üe\",\r\n        \"address_city\": \"Berlin\",\r\n        \"address_postal_code\": \"12059\",\r\n        \"address_iso_country\": \"DE\",\r\n        \"address_start_date\": \"2000-09-02\",\r\n        \"address_end_date\": \"2002-12-20\"\r\n      }\r\n    ],\r\n    \"date_onboarded\": \"2015-11-21\",\r\n    \"email\": \"bananaman@example.net\",\r\n    \"name\": \"Eric Wimp\",\r\n    \"address\": {\r\n      \"address_refinement\": \"Apartment 42\",\r\n      \"address_number\": \"29\",\r\n      \"address_street\": \"Acacia Road\",\r\n      \"address_city\": \"Nuttytown\",\r\n      \"address_postal_code\": \"FX20 7XS\",\r\n      \"address_iso_country\": \"GB\"\r\n    },\r\n    \"telephone\": \"+44 22 626 2626\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"Czech\"\r\n    ]\r\n  },\r\n  \"beneficiary_meta\": {\r\n    \"foo\": \"baa\",\r\n    \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "current receiver: \nuser: 59776cff-3b5e-4ad8-8c12-3301386ab7ab\nledger: 59777178-b126-436b-a6c7-4c4c18620937\niban: SK5500000011501000099891"
					},
					"response": []
				},
				{
					"name": "Add a New Beneficiary (Company)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"beneficiary_id\", jsonData.beneficiary_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"person\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"address_history\": [\r\n      {\r\n        \"address_refinement\": \"Apartment 77\",\r\n        \"address_number\": \"42\",\r\n        \"address_street\": \"Kirschbaumstra√üe\",\r\n        \"address_city\": \"Berlin\",\r\n        \"address_postal_code\": \"12059\",\r\n        \"address_iso_country\": \"DE\",\r\n        \"address_start_date\": \"2000-09-02\",\r\n        \"address_end_date\": \"2002-12-20\"\r\n      }\r\n    ],\r\n    \"date_onboarded\": \"2015-11-21\",\r\n    \"email\": \"bananaman@example.net\",\r\n    \"name\": \"Eric Wimp\",\r\n    \"address\": {\r\n      \"address_refinement\": \"Apartment 42\",\r\n      \"address_number\": \"29\",\r\n      \"address_street\": \"Acacia Road\",\r\n      \"address_city\": \"Nuttytown\",\r\n      \"address_postal_code\": \"FX20 7XS\",\r\n      \"address_iso_country\": \"GB\"\r\n    },\r\n    \"telephone\": \"+44 22 626 2626\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"Czech\"\r\n    ]\r\n  },\r\n  \"beneficiary_meta\": {\r\n    \"foo\": \"baa\",\r\n    \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "current receiver: \nuser: 59776cff-3b5e-4ad8-8c12-3301386ab7ab\nledger: 59777178-b126-436b-a6c7-4c4c18620937\niban: SK5500000011501000099891"
					},
					"response": []
				},
				{
					"name": "View Beneficiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"beneficiary status ok\"] = jsonData.beneficiary_status === \"beneficiary-status-ok\";",
									"if (!jsonData.beneficiary_status)",
									"     postman.setNextRequest(null);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Beneficiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"iban\": \"SK5500000011501000099891\",\r\n  \"bic_swift\": \"SPSRSKBAXXX\",\r\n  \"beneficiary_meta\": {\r\n    \"info\": \"{{test_info}}\"\r\n  },\r\n  \"person\": {\r\n    \"name\": \"Bananaman\",\r\n    \"pep\": false\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}"
							]
						},
						"description": "update receiver beneficiary\n"
					},
					"response": []
				},
				{
					"name": "Send 2 EUR to Benny with no Fixed Time",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"if (responseCode.code === 200){",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"transaction_id_no_fixed_time\", jsonData.transaction_id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ledger_id\": \"{{ledger_id}}\",\r\n  \"beneficiary_id\": \"{{beneficiary_id}}\",\r\n  \"payment_type\": \"payment-type-EU-SEPA-Step2\",\r\n  \"amount\": \"2\",\r\n \"reference\": \"xyz\",\r\n  \"transaction_meta\": {\r\n    \"info\": \"{{test_info}}\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						},
						"description": "using SEPA\n"
					},
					"response": []
				},
				{
					"name": "Check Transaction Status (no fixed date one)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id_no_fixed_time}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id_no_fixed_time}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ledger Debited by 2 EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Second Ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"if (responseCode.code === 200){",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"second_ledger_id\", jsonData.ledger_id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"{{euroledger_prodref}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Waiting Status for Second Ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"postman.setEnvironmentVariable(\"second_ledger_amount\", jsonData.amount);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{second_ledger_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{second_ledger_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign IBAN to Second Ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{second_ledger_id}}/assign-iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{second_ledger_id}}",
								"assign-iban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Inter-Ledger Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ledger_from_id\": \"{{ledger_id}}\",\r\n  \"ledger_to_id\": \"{{second_ledger_id}}\",\r\n  \"amount\": \"2.5\",\r\n  \"transaction_meta\": {\r\n    \"info\": \"{{test_info}}\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger"
							]
						},
						"description": "from ledger id to second ledger id"
					},
					"response": []
				},
				{
					"name": "Helper: Delay 10s",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/10",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ledger Debited by 2.5 EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ledger Credited by 2.5 EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Whisky Ledger for Enduser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"whisky_ledger_id\", jsonData.ledger_id);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"commodity\",\r\n  \"asset_type\": \"whisky\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/virtual",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"virtual"
							]
						}
					},
					"response": []
				},
				{
					"name": "Credit virtual ledger with 1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"environment.delayTimerStart = new Date();"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ledger_id\": \"{{whisky_ledger_id}}\",\r\n  \"amount\": \"1000\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/manual-credit",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"manual-credit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Debit virtual ledger with 25.25 copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"environment.delayTimerStart = new Date();"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ledger_id\": \"{{whisky_ledger_id}}\",\r\n  \"amount\": \"25.25\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/manual-debit",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"manual-debit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Whisky Ledger",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9115137-53f9-4f92-9623-d08c8c7911f6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"pm.globals.unset(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{whisky_ledger_id}}/",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{whisky_ledger_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}