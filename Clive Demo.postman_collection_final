{
	"info": {
		"_postman_id": "38a45083-1310-40ab-a6f5-f0661b128c99",
		"name": "Clive Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Whoami",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "551aa043-0474-4c61-93d6-10301ef6b24b",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"customer_id\", jsonData.customer_id);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/me",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"me"
					]
				},
				"description": "also set test time stamp"
			},
			"response": []
		},
		{
			"name": "Create a GBP Ledger for TM",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"GBPledger_id\", jsonData.ledger_id);",
							""
						],
						"id": "bc166afe-bbaf-473c-b01e-6df91b76bf66",
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"holder_id\": \"{{customer_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/ledgers",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"ledgers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch GBP ledger entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1cb42044-2362-4634-a3ac-fcf9acc271fd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/ledgers/{{GBPledger_id}}/wait",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"ledgers",
						"{{GBPledger_id}}",
						"wait"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Enduser",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69e041ad-1e29-4bc5-a561-7179a16c4e58",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"enduser_id\", jsonData.enduser_id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"person\": { \n       \"name\": \"Clive Mitchell\"\n    } \n}\n"
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/endusers",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"endusers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a GBP Ledger for Enduser",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a50318dd-789d-4ebd-9e94-4f9f62e6192a",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"enduserGBPledger_id\", jsonData.ledger_id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/ledgers",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"ledgers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch GBP ledger entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"accountnumber\", jsonData.uk_account_number);",
							"postman.setEnvironmentVariable(\"sortcode\", jsonData.uk_sort_code);"
						],
						"id": "4d572602-3677-4ac9-b654-94dd772e8282",
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/ledgers/{{enduserGBPledger_id}}/wait",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"ledgers",
						"{{enduserGBPledger_id}}",
						"wait"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a New Beneficiary (Individual) GBP",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"beneficiary_id\", jsonData.beneficiary_id);"
						],
						"id": "b53e6b21-b686-4a85-8d43-d69794934f84",
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"uk_account_number\": \"\",\r\n  \"uk_sort_code\": \"\",\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"person\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"name\": \"Clive Mitchell\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"british\"\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/beneficiaries",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"beneficiaries"
					]
				},
				"description": "current receiver: \nuser: 59776cff-3b5e-4ad8-8c12-3301386ab7ab\nledger: 59777178-b126-436b-a6c7-4c4c18620937\niban: SK5500000011501000099891"
			},
			"response": []
		},
		{
			"name": "View Beneficiary",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95f3c57a-2dd8-4452-8805-015da070ee61",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/wait",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"beneficiaries",
						"{{beneficiary_id}}",
						"wait"
					]
				}
			},
			"response": []
		},
		{
			"name": "Standard transaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3192870-db34-44f2-936e-8612d39e4d12",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"transaction_id\", jsonData.transaction_id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"ledger_from_id\": \"{{enduserGBPledger_id}}\",\r\n  \"beneficiary_id\": \"{{beneficiary_id}}\",\r\n  \"payment_type\": \"payment-type-UK-FasterPayments\",\r\n  \"amount\": \"4\",\r\n  \"reference\": \"TransfermateDemo\",\r\n  \"transaction_meta\": {\r\n    \"info\": \"{{test_info}}\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/transactions",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Inter-Ledger Transfer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9f4a12ef-5fc2-46a6-b7f6-f99104e68486",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"environment.delayTimerStart = new Date();",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"inter-ledgertransaction_id\", jsonData.transaction_id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"amount\": \"4\",\n  \"ledger_from_id\": \"{{GBPledger_id}}\",\n  \"ledger_to_id\": \"{{enduserledger_id}}\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"transactions",
						"inter-ledger"
					]
				},
				"description": "from ledger id to second ledger id"
			},
			"response": []
		},
		{
			"name": "Check Transaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91a80afd-7819-471b-b908-6ff12988b657",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"transactions",
						"{{transaction_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Transaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91a80afd-7819-471b-b908-6ff12988b657",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{customer_api_key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/v1/customer/transactions/{{inter-ledgertransaction_id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"v1",
						"customer",
						"transactions",
						"{{inter-ledgertransaction_id}}"
					]
				}
			},
			"response": []
		}
	]
}