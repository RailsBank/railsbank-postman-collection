{
	"info": {
		"_postman_id": "d5871b28-694e-44e1-a40e-8fb26bc37336",
		"name": "Complete Railsbank API",
		"description": "README:\n\nAll the customer endpoints available in the 'Play Live' arena\n\nNOT to be used for regression test. includes 'dangerous' endpoints\n\nSome bodies contain the minimum required fields. To see the full list, please refer to the docs\n(https://docs.railsbank.com/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "About Customer and Misc.",
			"item": [
				{
					"name": "1. Returns version of API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/version",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get Customer's own information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/me",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get a list of Customer's authorised banks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/my/partners",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"my",
								"partners"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get list of Customer's enabled products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/my/products",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"my",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "5a. List card programmes assigned with specific product (ExampleBank-Direct-Debit-1)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/my/products/ExampleBank-Direct-Debit-1/card-programmes",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"my",
								"products",
								"ExampleBank-Direct-Debit-1",
								"card-programmes"
							]
						}
					},
					"response": []
				},
				{
					"name": "5b. List card programmes assigned with specific product (Railsbank-Debit-Card-1)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/my/products/Railsbank-Debit-Card-1/card-programmes",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"my",
								"products",
								"Railsbank-Debit-Card-1",
								"card-programmes"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Return list of notifications created between dates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/notifications",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Beneficiaries",
			"item": [
				{
					"name": "1a. Create New Beneficiary (person GBP)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"uk_account_number\": \"{{uk_account_number}}\",\n \"uk_sort_code\": \"{{uk_sort_code}}\",\n \"holder_id\": \"{{enduser_id}}\",\n \"asset_class\": \"currency\",\n \"asset_type\": \"gbp\",\n \"person\": {\n   \"country_of_residence\": [\n     \"GB\"\n   ],\n   \"date_onboarded\": \"2015-11-21\",\n   \"email\": \"sallysmith@railsbank.com\",\n   \"name\": \"Sally Smith\",\n   \"address\": {\n     \"address_refinement\": \"Apartment 8\",\n     \"address_number\": \"6\",\n     \"address_street\": \"Harold Road\",\n     \"address_city\": \"London\",\n     \"address_region\": \"London\",\n     \"address_postal_code\": \"SE19 3PU\",\n     \"address_iso_country\": \"GB\"\n   },\n   \"telephone\": \"+44 22 626 2626\",\n   \"date_of_birth\": \"1970-11-05\",\n   \"nationality\": [\n     \"British\"\n   ]\n },\n \"beneficiary_meta\": {\n   \"foo\": \"baa\",\n   \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\n }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "This represents the entity where money can be sent.\n\nEvery transaction must point to an existing beneficiary. The customer’s compliance firewall will be run against the newly created entity.\n\nIf some attributes / documents are missing, this will be reflected by benficiary status and quarantine attribute."
					},
					"response": []
				},
				{
					"name": "1b. Create New Beneficiary (person EUR)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"iban\": \"{{iban}}\",\r\n  \"bicswift\": \"{{bicswift}}\",\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n \"person\": {\r\n   \"country_of_residence\": [\r\n     \"GB\"\r\n   ],\r\n   \"date_onboarded\": \"2015-11-21\",\r\n   \"email\": \"sallysmith@railsbank.com\",\r\n   \"name\": \"Sally Smith\",\r\n   \"address\": {\r\n     \"address_refinement\": \"Apartment 8\",\r\n     \"address_number\": \"6\",\r\n     \"address_street\": \"Harold Road\",\r\n     \"address_city\": \"London\",\r\n     \"address_region\": \"London\",\r\n     \"address_postal_code\": \"SE19 3PU\",\r\n     \"address_iso_country\": \"GB\"\r\n   },\r\n   \"telephone\": \"+44 22 626 2626\",\r\n   \"date_of_birth\": \"1970-11-05\",\r\n   \"nationality\": [\r\n     \"British\"\r\n   ]\r\n },\r\n \"beneficiary_meta\": {\r\n   \"foo\": \"baa\",\r\n   \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "This represents the entity where money can be sent.\n\nEvery transaction must point to an existing beneficiary. The customer’s compliance firewall will be run against the newly created entity.\n\nIf some attributes / documents are missing, this will be reflected by benficiary status and quarantine attribute."
					},
					"response": []
				},
				{
					"name": "1c. Create New Beneficiary (company GBP)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"uk_account_number\": \"{{uk_account_number}}\",\r\n \"uk_sort_code\": \"{{uk_sort_code}}\",\r\n \"holder_id\": \"{{enduser_id}}\",\r\n \"asset_class\": \"currency\",\r\n \"asset_type\": \"gbp\",\r\n  \"company\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"address_history\": [\r\n      {\r\n        \"address_refinement\": \"Apartment 77\",\r\n        \"address_number\": \"42\",\r\n        \"address_street\": \"Kirschbaumstraße\",\r\n        \"address_city\": \"Berlin\",\r\n        \"address_region\": \"Bremen\",\r\n        \"address_postal_code\": \"12059\",\r\n        \"address_iso_country\": \"DE\",\r\n        \"address_start_date\": \"2000-09-02\",\r\n        \"address_end_date\": \"2002-12-20\"\r\n      }\r\n    ],\r\n    \"date_onboarded\": \"2015-11-21\",\r\n    \"email\": \"icecream@example.net\",\r\n    \"name\": \"John's Ice Creams Ltd\",\r\n    \"address\": {\r\n      \"address_refinement\": \"Apartment 42\",\r\n      \"address_number\": \"29\",\r\n      \"address_street\": \"Acacia Road\",\r\n      \"address_city\": \"Dinslaken\",\r\n      \"address_region\": \"Bremen\",\r\n      \"address_postal_code\": \"FX20 7XS\",\r\n      \"address_iso_country\": \"DE\"\r\n    },\r\n    \"telephone\": \"+44 22 626 2626\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"Czech\"\r\n    ]\r\n  },\r\n  \"beneficiary_meta\": {\r\n    \"foo\": \"baa\",\r\n    \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "This represents the entity where money can be sent.\n\nEvery transaction must point to an existing beneficiary. The customer’s compliance firewall will be run against the newly created entity.\n\nIf some attributes / documents are missing, this will be reflected by benficiary status and quarantine attribute."
					},
					"response": []
				},
				{
					"name": "1d. Create New Beneficiary (company EUR)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"iban\": \"{{iban}}\",\r\n  \"bicswift\": \"{{bicswift}}\",\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"company\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"address_history\": [\r\n      {\r\n        \"address_refinement\": \"Apartment 77\",\r\n        \"address_number\": \"42\",\r\n        \"address_street\": \"Kirschbaumstraße\",\r\n        \"address_city\": \"Berlin\",\r\n        \"address_region\": \"Bremen\",\r\n        \"address_postal_code\": \"12059\",\r\n        \"address_iso_country\": \"DE\",\r\n        \"address_start_date\": \"2000-09-02\",\r\n        \"address_end_date\": \"2002-12-20\"\r\n      }\r\n    ],\r\n    \"date_onboarded\": \"2015-11-21\",\r\n    \"email\": \"icecream@example.net\",\r\n    \"name\": \"John's Ice Creams Ltd\",\r\n    \"address\": {\r\n      \"address_refinement\": \"Apartment 42\",\r\n      \"address_number\": \"29\",\r\n      \"address_street\": \"Acacia Road\",\r\n      \"address_city\": \"Dinslaken\",\r\n      \"address_region\": \"Bremen\",\r\n      \"address_postal_code\": \"FX20 7XS\",\r\n      \"address_iso_country\": \"DE\"\r\n    },\r\n    \"telephone\": \"+44 22 626 2626\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"Czech\"\r\n    ]\r\n  },\r\n  \"beneficiary_meta\": {\r\n    \"foo\": \"baa\",\r\n    \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "This represents the entity where money can be sent.\n\nEvery transaction must point to an existing beneficiary. The customer’s compliance firewall will be run against the newly created entity.\n\nIf some attributes / documents are missing, this will be reflected by benficiary status and quarantine attribute."
					},
					"response": []
				},
				{
					"name": "2. List all Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						}
					},
					"response": []
				},
				{
					"name": "2b. List Customer's Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries?holder_id={{customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{customer_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2c. List Enduser's Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries?holder_id={{enduser_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{enduser_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Update Beneficiary (GBP)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"default_account\": {\n    \"bank_code_type\": \"sort-code\",\n    \"bank_code\": \"{{uk_sort_code}}\",\n    \"account_number\": \"{{uk_account_number}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Update Beneficiary (EUR)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"default_account\": {\n   \"iban\":  \"{{iban}}\"\n }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Fetch Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Create New Account for Beneficiary (GBP)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"account_number\": \"{{uk_account_number}}\",\r\n  \"bank_country\": \"GB\",\r\n  \"bank_code\": \"{{uk_sort_code}}\",\r\n  \"bank_name\": \"PayrNET\",\r\n  \"asset_type\": \"gbp\",\r\n  \"asset_class\": \"currency\",\r\n  \"bank_code_type\": \"sort-code\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"accounts"
							]
						},
						"description": "asset_class:\n[ commodity, currency ]\n\nasset_type:\n[ aud, chf, cad, sek, goldbloc, usd, nok, whisky, jpy, nzd, gold, gbp, eur ]\n\n\nbank_code_type:\n[ routing-number, aba, sort-code, zengin-code, bsb ]"
					},
					"response": []
				},
				{
					"name": "6. Return accounts of Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}}/accounts",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}}",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Return account for Beneficiary* (bene_id and acc_id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}}/accounts/{{account_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}}",
								"accounts",
								"{{account_id}}"
							]
						},
						"description": "(if you dont want to povide beneficiary-id there is endpoint that require only account-id)"
					},
					"response": []
				},
				{
					"name": "8. Update existing account for Beneficiary",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bank_code_type\": \"sort-code\",\n  \"bank_country\": \"GB\",\n  \"bic_swift\": \"SPSRSKBAXXX\",\n  \"bank_code\": \"45564658\",\n  \"iban\": \"SK4402005678901234567890\",\n  \"account_number\": \"45564658\",\n  \"bank_name\": \"Bank of America\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts/{{account_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Change default account of Beneficiary",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts/{{account_id}}/make-default",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"accounts",
								"{{account_id}}",
								"make-default"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. Fetch latest f/w calc report for Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/compliance-firewall-calculation",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"compliance-firewall-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "11. Move existing Beneficiary from missing data to state which will rerun firewalls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"rerun-firewall"
							]
						}
					},
					"response": []
				},
				{
					"name": "12. Wait until Beneficiary will be in final state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "13. Return account for Beneficiary* (acc_id only)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiary-accounts/{{account_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiary-accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "1. Add a new card to the ledger",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_programme\": \"some-chars\",\n  \"ledger_id\": \"{{ledger1_id}}\",\n  \"partner_product\": \"ExampleBank-Direct-Debit-1\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. List Cards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get Card Details from token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards/by-token/{{card_token}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards",
								"by-token",
								"{{card_token}}"
							]
						},
						"description": "Enduser facing card identifier printed on the card. Unique per card programme. Shorter than card_id."
					},
					"response": []
				},
				{
					"name": "4. Get card details from card_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards/{{card_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards",
								"{{card_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Activate card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards/{{card_id}}/activate",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards",
								"{{card_id}}",
								"activate"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Get card image (valid for 10 mins)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards/{{card_id}}/image",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards",
								"{{card_id}}",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Suspend card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/cards/{{card_id}}/suspend",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"cards",
								"{{card_id}}",
								"suspend"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Compliance",
			"item": [
				{
					"name": "1. Set contact information for Customer's compliance officer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"mail@example.com\",\n  \"slack_domain\": \"abcdefghijklmnopqrstuvwxyz\",\n  \"slack_channel\": \"abcdefghijklmnopqrstuvwxyz\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-contact",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Get contact information for Customer's compliance officer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-contact",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "3a. Set / Update Firewall rules (Beneficiaries)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"beneficiaries"
							]
						},
						"description": "Set/update firewall rules. The firewall rules are coded in special lisp-like syntax\nand are executed whenever customer creates new enduser or new transaction. The\nfirewall type configures, which of these options the firewall should verify.\nPlease keep in mind that any update of rules, even submitting the same data, leads to use of all current datasets.\nThis can lead to different firewall results, even if the rules themselves have not been altered"
					},
					"response": []
				},
				{
					"name": "3b. Set / Update Firewall rules (Transactions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"transactions"
							]
						},
						"description": "Set/update firewall rules. The firewall rules are coded in special lisp-like syntax\nand are executed whenever customer creates new enduser or new transaction. The\nfirewall type configures, which of these options the firewall should verify.\nPlease keep in mind that any update of rules, even submitting the same data, leads to use of all current datasets.\nThis can lead to different firewall results, even if the rules themselves have not been altered"
					},
					"response": []
				},
				{
					"name": "3c. Set / Update Firewall rules (Endusers)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"endusers"
							]
						},
						"description": "Set/update firewall rules. The firewall rules are coded in special lisp-like syntax\nand are executed whenever customer creates new enduser or new transaction. The\nfirewall type configures, which of these options the firewall should verify.\nPlease keep in mind that any update of rules, even submitting the same data, leads to use of all current datasets.\nThis can lead to different firewall results, even if the rules themselves have not been altered"
					},
					"response": []
				},
				{
					"name": "4a. Get Firewall rules (Beneficiaries)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"beneficiaries"
							]
						}
					},
					"response": []
				},
				{
					"name": "4b. Get Firewall rules (Transactions)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "4c. Get Firewall rules (Endusers)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "5a. Get firewall rules history (Beneficiaries)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries/history",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"beneficiaries",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "5b. Get firewall rules history (Transactions)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions/history",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"transactions",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "5c. Get firewall rules history (Endusers)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers/history",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"endusers",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "6a. Applies most recent firewall rules with current datasets (Beneficiaries)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/{compliance_firewall_type}/reload",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"{compliance_firewall_type}",
								"reload"
							]
						}
					},
					"response": []
				},
				{
					"name": "6b. Applies most recent firewall rules with current datasets (Transactions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/{compliance_firewall_type}/reload",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"{compliance_firewall_type}",
								"reload"
							]
						}
					},
					"response": []
				},
				{
					"name": "6c. Applies most recent firewall rules with current datasets (Endusers)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/{compliance_firewall_type}/reload",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"{compliance_firewall_type}",
								"reload"
							]
						}
					},
					"response": []
				},
				{
					"name": "7a. Test Firewall rules (Beneficiaries)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\",\n  \"transaction_id\": \"{{transaction_id}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries/test",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"beneficiaries",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "7b. Test Firewall rules (Transactions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\",\n  \"transaction_id\": \"{{transaction_id}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions/test",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"transactions",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "7c. Test Firewall rules (Endusers)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\",\n  \"transaction_id\": \"{{transaction_id}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers/test",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-rules",
								"endusers",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Create Firewall dataset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dataset_data\": \"Country,Risk\\nUSA,low\\nISR,high\",\n  \"dataset_name\": \"countries-by-risk-level\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-static-data",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-static-data"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Read Firewall dataset",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-firewall-static-data/{{dataset_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-firewall-static-data",
								"{{dataset_id}}"
							]
						},
						"description": "Read firewall dataset. The dataset should consist of CSV data in a string. Rows\nand columns can be used to query individual data in the dataset. The dataset is\naccesible by the given name, which must be unique for semantically different\ndatasets."
					},
					"response": []
				},
				{
					"name": "10. Get compliance manual that includes all the Firewalls and related data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-manual",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-manual"
							]
						}
					},
					"response": []
				},
				{
					"name": "10b. Get compliance manual that includes all the Firewalls and related data (at some specific point in time",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/compliance-manual?at_time={{at_specific_time}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"compliance-manual"
							],
							"query": [
								{
									"key": "at_time",
									"value": "{{at_specific_time}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Direct Debit",
			"item": [
				{
					"name": "1. Creates a mandate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uk_sort_code\": \"{{uk_sort_code}}\",\n  \"email\": \"mail@example.com\",\n  \"uk_account_number\": \"{{uk_account_number}}\",\n  \"partner_product\": \"ExampleBank-EUR-1\",\n  \"account_holder_name\": \"John Smith\",\n  \"enduser_id\": \"{{enduser_id}}\",\n  \"scheme\": \"bacs\",\n  \"iban\": \"{{iban}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/direct-debit/mandates",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"mandates"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. List mandates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/direct-debit/mandates",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"mandates"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get a single mandate",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "/v1/customer/direct-debit/mandates/{{mandate_id}}",
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"mandates",
								"{{mandate_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Cancel active mandate and all associated cancellable payments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/direct-debit/mandates/{{mandate_id}}/cancel",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"mandates",
								"{{mandate_id}}",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Create payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"description\",\n  \"amount\": \"0\",\n  \"mandate_id\": \"{{mandate_id}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/direct-debit/payments",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. List payments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/direct-debit/payments",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Get a single payment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/direct-debit/payments/{{payment_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"direct-debit",
								"payments",
								"{{payment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Endusers",
			"item": [
				{
					"name": "1. List all Endusers created by the Customer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "2a. Add new Enduser (Person)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"person\": { \n       \"name\": \"Enduser Person\", \n       \"email\": \"enduser.person@email.com\", \n       \"date_of_birth\": \"1999-11-11\", \n       \"telephone\": \"+44 12 345 6789\", \n       \"address\": {  \n         \"address_refinement\": \"Apartment 12\", \n         \"address_number\": \"34\", \n         \"address_street\": \"Mahogany Road\", \n         \"address_city\": \"London\", \n         \"address_postal_code\": \"FX20 7XS\",\n         \"address_iso_country\": \"GBR\" \n       }, \n       \"address_history\": [ \n         { \n           \"address_refinement\": \"Apartment 77\", \n           \"address_number\": \"42\", \n           \"address_street\": \"Kirschbaumstraße\", \n           \"address_city\": \"Berlin\", \n           \"address_postal_code\": \"12059\", \n           \"address_iso_country\": \"DE\",\n           \"address_start_date\": \"2000-09-02\", \n           \"address_end_date\": \"2002-12-20\" \n         } \n       ], \n       \"nationality\": [ \n         \"British\" \n       ], \n       \"country_of_residence\": [ \n         \"GBR\" \n       ], \n       \"date_onboarded\": \"2012-10-21\" \n     }, \n      \"enduser_meta\": { \n       \"foo\": \"baa\", \n      \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\" \n  } \n} "
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "2b. Add new Enduser (Company)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  { \n \"company\": {\n    \"name\": \"Example Company\",\n    \"trading_name\": \"Example Company Ltd.\",\n    \"web_site\": \"www.website.com\",\n    \"industry\": \"Financial Services\",\n    \"listed_on_stock_exchange\": false,\n    \"trading_addresses\": [\n      {\n         \"address_refinement\": \"Floor 15\", \n         \"address_number\": \"20\", \n         \"address_street\": \"The Strand\", \n         \"address_city\": \"London\", \n         \"address_postal_code\": \"SS8 9JH\", \n         \"address_iso_country\": \"GBR\" \n      }\n    ],\n    \"directors\": [\n      {\n        \"date_appointed\": \"1990-01-01\",\n        \"job_title\": \"CEO\",\n        \"is_also_ubo\": false,\n        \"person\": {\n          \"country_of_residence\": [\n            \"USA\"\n          ],\n          \"pep\": false,\n          \"email\": \"johnsmith@gmail.com\",\n          \"name\": \"John Smith\",\n          \"social_security_number\": \"090606\",\n          \"telephone\": \"+44 98 765 4321\",\n          \"date_of_birth\": \"1981-02-03\",\n          \"nationality\": [\n            \"American\"\n          ]\n        }\n      }\n    ]\n }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Fetch Enduser entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Update existing Enduser",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {\n    \"trading_addresses\": [\n      {\n        \"address_iso_country\": \"GB\"\n      },\n      {\n        \"address_iso_country\": \"GB\"\n      }\n    ],\n    \"regulated_financial_service_firm\": true,\n    \"registration_number\": \"8574-897512-964\",\n    \"incorporation_locality\": \"home\",\n    \"regulatory_licenses\": [\n      {\n        \"regulatory_license_type\": \"Other\",\n        \"regulatory_license_body\": \"MT-Malta-Financial-Services-Authority-MFSA\",\n        \"regulatory_license_reference_number\": \"abcdefghijklmnopqrstuvwxyz\"\n      },\n      {\n        \"regulatory_license_type\": \"GB-EMI\",\n        \"regulatory_license_body\": \"FR-French-Takeover-Panel\",\n        \"regulatory_license_reference_number\": \"random sequence of characters\"\n      }\n    ],\n    \"vat\": \"string\",\n    \"directors\": [\n      {\n        \"date_appointed\": \"2000-01-01\",\n        \"company\": {\n          \"trading_addresses\": [],\n          \"regulated_financial_service_firm\": true,\n          \"registration_number\": \"8574-897512-964\",\n          \"incorporation_locality\": \"home\",\n          \"regulatory_licenses\": [],\n          \"vat\": \"string\",\n          \"directors\": [],\n          \"type_other\": \"string\",\n          \"date_onboarded\": \"2011-11-21\",\n          \"legal_entry_number\": \"2187-99\",\n          \"industry\": \"spot welding\",\n          \"web_site\": \"http://foo.bar\",\n          \"tin\": \"some-chars\",\n          \"name\": \"Acme Corporation Ltd\",\n          \"trading_address_history\": [],\n          \"registration_address_history\": [],\n          \"corporate_entity_type\": \"trust\",\n          \"registration_address\": {\n            \"address_iso_country\": \"US\"\n          },\n          \"type\": \"UA-Vidkryte-Aktsionerne-Tovarystv-VAT\",\n          \"listed_on_stock_exchange\": true,\n          \"trading_name\": \"Bob's Burgers\",\n          \"ultimate_beneficial_owners\": [],\n          \"eu_vat\": \"BE49818\",\n          \"stock_exchanges\": []\n        },\n        \"job_title\": \"CFO\",\n        \"is_also_ubo\": false,\n        \"person\": {\n          \"country_of_residence\": [\n            \"USA\"\n          ],\n          \"pep_type\": \"direct\",\n          \"pep_notes\": \"comment\",\n          \"address_history\": [],\n          \"pep\": true,\n          \"date_onboarded\": \"2011-11-21\",\n          \"email\": \"alice@short.com\",\n          \"tin\": \"541571\",\n          \"name\": \"Bob\",\n          \"address\": {\n            \"address_iso_country\": \"US\"\n          },\n          \"social_security_number\": \"090606\",\n          \"telephone\": \"0012345678912\",\n          \"date_of_birth\": \"1981-02-03\",\n          \"tin_type\": \"type\",\n          \"nationality\": [\n            \"Hungarian\"\n          ]\n        }\n      },\n      {\n        \"date_appointed\": \"2000-01-01\",\n        \"company\": {\n          \"trading_addresses\": [],\n          \"regulated_financial_service_firm\": true,\n          \"registration_number\": \"8574-897512-964\",\n          \"incorporation_locality\": \"home\",\n          \"regulatory_licenses\": [],\n          \"vat\": \"string\",\n          \"directors\": [],\n          \"type_other\": \"random sequence of characters\",\n          \"date_onboarded\": \"2011-11-21\",\n          \"legal_entry_number\": \"2187-99\",\n          \"industry\": \"spot welding\",\n          \"web_site\": \"http://foo.bar\",\n          \"tin\": \"string\",\n          \"name\": \"Acme Corporation Ltd\",\n          \"trading_address_history\": [],\n          \"registration_address_history\": [],\n          \"corporate_entity_type\": \"trust\",\n          \"registration_address\": {\n            \"address_iso_country\": \"US\"\n          },\n          \"type\": \"US-Doing-Business-As\",\n          \"listed_on_stock_exchange\": true,\n          \"trading_name\": \"Bob's Burgers\",\n          \"ultimate_beneficial_owners\": [],\n          \"eu_vat\": \"BE49818\",\n          \"stock_exchanges\": []\n        },\n        \"job_title\": \"CFO\",\n        \"is_also_ubo\": false,\n        \"person\": {\n          \"country_of_residence\": [\n            \"USA\"\n          ],\n          \"pep_type\": \"direct\",\n          \"pep_notes\": \"comment\",\n          \"address_history\": [],\n          \"pep\": true,\n          \"date_onboarded\": \"2011-11-21\",\n          \"email\": \"alice@short.com\",\n          \"tin\": \"541571\",\n          \"name\": \"Bob\",\n          \"address\": {\n            \"address_iso_country\": \"GB\"\n          },\n          \"social_security_number\": \"090606\",\n          \"telephone\": \"0012345678912\",\n          \"date_of_birth\": \"1981-02-03\",\n          \"tin_type\": \"type\",\n          \"nationality\": [\n            \"Hungarian\"\n          ]\n        }\n      }\n    ],\n    \"type_other\": \"string\",\n    \"date_onboarded\": \"2011-11-21\",\n    \"legal_entry_number\": \"2187-99\",\n    \"industry\": \"spot welding\",\n    \"web_site\": \"http://foo.bar\",\n    \"tin\": \"short\",\n    \"name\": \"Acme Corporation Ltd\",\n    \"trading_address_history\": [\n      {\n        \"address_end_date\": \"2047-10-16\",\n        \"address_start_date\": \"2015-03-07\",\n        \"address_iso_country\": \"GB\"\n      },\n      {\n        \"address_end_date\": \"2099-12-31\",\n        \"address_start_date\": \"2000-01-01\",\n        \"address_iso_country\": \"US\"\n      }\n    ],\n    \"registration_address_history\": [\n      {\n        \"address_end_date\": \"2078-03-05\",\n        \"address_start_date\": \"2015-03-07\",\n        \"address_iso_country\": \"US\"\n      },\n      {\n        \"address_end_date\": \"2099-12-31\",\n        \"address_start_date\": \"1964-11-17\",\n        \"address_iso_country\": \"US\"\n      }\n    ],\n    \"corporate_entity_type\": \"trust\",\n    \"registration_address\": {\n      \"address_region\": \"Oregon\",\n      \"address_iso_country\": \"US\",\n      \"address_number\": \"47\",\n      \"address_postal_code\": \"94501\",\n      \"address_refinement\": \"Apartment 17\",\n      \"address_street\": \"Hudson Street\",\n      \"address_city\": \"Bratislava\"\n    },\n    \"type\": \"HR-slobodna-djelatnost\",\n    \"listed_on_stock_exchange\": true,\n    \"trading_name\": \"Bob's Burgers\",\n    \"ultimate_beneficial_owners\": [\n      {\n        \"company\": {\n          \"trading_addresses\": [],\n          \"regulated_financial_service_firm\": true,\n          \"registration_number\": \"8574-897512-964\",\n          \"incorporation_locality\": \"home\",\n          \"regulatory_licenses\": [],\n          \"vat\": \"some-chars\",\n          \"directors\": [],\n          \"type_other\": \"abcdefghijklmnopqrstuvwxyz\",\n          \"date_onboarded\": \"2011-11-21\",\n          \"legal_entry_number\": \"2187-99\",\n          \"industry\": \"spot welding\",\n          \"web_site\": \"http://foo.bar\",\n          \"tin\": \"string\",\n          \"name\": \"Acme Corporation Ltd\",\n          \"trading_address_history\": [],\n          \"registration_address_history\": [],\n          \"corporate_entity_type\": \"trust\",\n          \"registration_address\": {\n            \"address_iso_country\": \"GB\"\n          },\n          \"type\": \"ET-cooperative-societies-Amharic-CS\",\n          \"listed_on_stock_exchange\": true,\n          \"trading_name\": \"Bob's Burgers\",\n          \"ultimate_beneficial_owners\": [],\n          \"eu_vat\": \"BE49818\",\n          \"stock_exchanges\": []\n        },\n        \"percentage_holding\": 49.8,\n        \"person\": {\n          \"country_of_residence\": [\n            \"USA\"\n          ],\n          \"pep_type\": \"direct\",\n          \"pep_notes\": \"comment\",\n          \"address_history\": [],\n          \"pep\": true,\n          \"date_onboarded\": \"2011-11-21\",\n          \"email\": \"alice@short.com\",\n          \"tin\": \"541571\",\n          \"name\": \"Bob\",\n          \"address\": {\n            \"address_iso_country\": \"GB\"\n          },\n          \"social_security_number\": \"090606\",\n          \"telephone\": \"0012345678912\",\n          \"date_of_birth\": \"1981-02-03\",\n          \"tin_type\": \"type\",\n          \"nationality\": [\n            \"Hungarian\"\n          ]\n        }\n      },\n      {\n        \"company\": {\n          \"trading_addresses\": [],\n          \"regulated_financial_service_firm\": true,\n          \"registration_number\": \"8574-897512-964\",\n          \"incorporation_locality\": \"home\",\n          \"regulatory_licenses\": [],\n          \"vat\": \"some-chars\",\n          \"directors\": [],\n          \"type_other\": \"random sequence of characters\",\n          \"date_onboarded\": \"2011-11-21\",\n          \"legal_entry_number\": \"2187-99\",\n          \"industry\": \"spot welding\",\n          \"web_site\": \"http://foo.bar\",\n          \"tin\": \"string\",\n          \"name\": \"Acme Corporation Ltd\",\n          \"trading_address_history\": [],\n          \"registration_address_history\": [],\n          \"corporate_entity_type\": \"trust\",\n          \"registration_address\": {\n            \"address_iso_country\": \"US\"\n          },\n          \"type\": \"CH-societe-simple\",\n          \"listed_on_stock_exchange\": true,\n          \"trading_name\": \"Bob's Burgers\",\n          \"ultimate_beneficial_owners\": [],\n          \"eu_vat\": \"BE49818\",\n          \"stock_exchanges\": []\n        },\n        \"percentage_holding\": 49.8,\n        \"person\": {\n          \"country_of_residence\": [\n            \"USA\"\n          ],\n          \"pep_type\": \"direct\",\n          \"pep_notes\": \"comment\",\n          \"address_history\": [],\n          \"pep\": true,\n          \"date_onboarded\": \"2011-11-21\",\n          \"email\": \"alice@short.com\",\n          \"tin\": \"541571\",\n          \"name\": \"Bob\",\n          \"address\": {\n            \"address_iso_country\": \"US\"\n          },\n          \"social_security_number\": \"090606\",\n          \"telephone\": \"0012345678912\",\n          \"date_of_birth\": \"1981-02-03\",\n          \"tin_type\": \"type\",\n          \"nationality\": [\n            \"Hungarian\"\n          ]\n        }\n      }\n    ],\n    \"eu_vat\": \"BE49818\",\n    \"stock_exchanges\": [\n      {\n        \"stock_exchange_ticker\": \"string\",\n        \"stock_exchange_name\": \"SI-Ljubljana-Stock-Exchange-XLJU\"\n      },\n      {\n        \"stock_exchange_ticker\": \"random sequence of characters\",\n        \"stock_exchange_name\": \"IN-UP-Stock-Exchange\"\n      }\n    ]\n  },\n  \"enduser_meta\": {\n    \"foo\": \"bar\"\n  },\n  \"person\": {\n    \"country_of_residence\": [\n      \"USA\"\n    ],\n    \"pep_type\": \"direct\",\n    \"pep_notes\": \"comment\",\n    \"address_history\": [\n      {\n        \"address_end_date\": \"2099-12-31\",\n        \"address_start_date\": \"2000-01-01\",\n        \"address_iso_country\": \"US\"\n      },\n      {\n        \"address_end_date\": \"2099-12-31\",\n        \"address_start_date\": \"1964-11-17\",\n        \"address_iso_country\": \"GB\"\n      }\n    ],\n    \"pep\": true,\n    \"date_onboarded\": \"2011-11-21\",\n    \"email\": \"alice@short.com\",\n    \"tin\": \"541571\",\n    \"name\": \"Bob\",\n    \"address\": {\n      \"address_region\": \"Mississippi\",\n      \"address_iso_country\": \"GB\",\n      \"address_number\": \"5\",\n      \"address_postal_code\": \"123456\",\n      \"address_refinement\": \"Apartment 42\",\n      \"address_street\": \"Hudson Street\",\n      \"address_city\": \"Bratislava\"\n    },\n    \"social_security_number\": \"090606\",\n    \"telephone\": \"0012345678912\",\n    \"date_of_birth\": \"1981-02-03\",\n    \"tin_type\": \"type\",\n    \"nationality\": [\n      \"Hungarian\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Fetch latest firewall calculation report for Enduser",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}/compliance-firewall-calculation",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}",
								"compliance-firewall-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Move existing Enduser from missing data to state which will rerun firewalls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}",
								"rerun-firewall"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Wait until Enduser is in final state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_id}}",
								"wait"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ledgers",
			"item": [
				{
					"name": "1a. List all Ledgers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "1b. List Customer's Ledgers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers?holder_id={{customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{customer_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1c. List a specifc Enduser's Ledgers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers?holder_id={{enduser_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{enduser_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2a. Add new Ledger for the Customer (GBP)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{customer_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-omnibus\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "2b. Add new Ledger for the Customer (EUR)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{customer_id}}\",\r\n  \"partner_product\": \"PayrNet-EUR-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-omnibus\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "2c. Add new Ledger for a given Enduser (GBP)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "2d. Add new Ledger for a given Enduser (EUR)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"PayrNet-EUR-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Find Ledger based on IBAN",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/by-iban?iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"by-iban"
							],
							"query": [
								{
									"key": "iban",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Find Ledger based on UK address",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/by-uk-bank-account?uk_account_number&uk_sort_code",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"by-uk-bank-account"
							],
							"query": [
								{
									"key": "uk_account_number",
									"value": null
								},
								{
									"key": "uk_sort_code",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Get list of Ledgers that were modified from a specific time",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/changed",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"changed"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Get list of Ledgers that Customer is able to assign to holders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/unassigned",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"unassigned"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Add new virtual Ledger for a given holder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n   \"holder_id\": \"{{enduser_id}}\", \n   \"asset_class\": \"commodity\", \n   \"asset_type\": \"whisky\" \n }"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/virtual",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"virtual"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Update Ledger",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Fetch Ledger",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. Assign Ledger to holder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"holder_id\": \"@@@@@@@@@@@@@@@@@@@@@@\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}/assign",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "11. Assign IBAN and BIC for given Ledger",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}/assign-iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}",
								"assign-iban"
							]
						}
					},
					"response": []
				},
				{
					"name": "12. Close Ledger Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}/close",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}",
								"close"
							]
						},
						"description": "Currently supported for products: PayrNet-GBP-1, PayrNet-EUR-1, ExampleBank-GBP-1. ExamnleBanl-EUR-1."
					},
					"response": []
				},
				{
					"name": "13. Get Ledger entries in a specified time range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}/entries?ledger_id",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}",
								"entries"
							],
							"query": [
								{
									"key": "ledger_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "14. Move existing Ledger from missing data to state which will rerun firewalls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}",
								"rerun-firewall"
							]
						}
					},
					"response": []
				},
				{
					"name": "15. Wait until Ledger is in final state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}",
								"wait"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quarantine (as Customer)",
			"item": [
				{
					"name": "1. List all objects (transactions,endusers) in quarantine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. List all Beneficiaries in the quarantine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"beneficiaries"
							]
						},
						"description": "(ordered by creation date)"
					},
					"response": []
				},
				{
					"name": "3. Fetch quarantine for Beneficiary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"beneficiaries",
								"{{beneficiary_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Comment beneficiary in quarantine (transaction,enduser)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\": \"single line comment\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id}}/comments",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"beneficiaries",
								"{{beneficiary_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Resolve object Beneficiary in quarantine",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\": \"single line comment\",\n  \"qr_status\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id}}/resolve",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"beneficiaries",
								"{{beneficiary_id}}",
								"resolve"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. List all Endusers in the quarantine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"endusers"
							]
						},
						"description": "ordered by entity creation date"
					},
					"response": []
				},
				{
					"name": "7. Fetch quarantine for Enduser",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"endusers",
								"{{enduser_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Comment Enduser in quarantine (transactions,enduser)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\": \"single line comment\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_id}}/comments",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"endusers",
								"{{enduser_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Resolve object Enduser in quarantine",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\": \"single line comment\",\n  \"qr_status\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_id}}/resolve",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"endusers",
								"{{enduser_id}}",
								"resolve"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. List all transactions in the quarantine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"transactions"
							]
						},
						"description": "ordered by entity creation date"
					},
					"response": []
				},
				{
					"name": "11. Fetch quarantine for transaction",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "12. Comment transaction in quarantine (transaction,enduser)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\": \"single line comment\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}/comments",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"transactions",
								"{{transaction_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "13. Resolve transaction in quarantine",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment\": \"single line comment\",\n  \"qr_status\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}/resolve",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"quarantine",
								"transactions",
								"{{transaction_id}}",
								"resolve"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "1a. Create new transaction (GBP - UKFasterPayment)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-UK-FasterPayments\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{ledger1_id}}\",\n    \"beneficiary_id\": \"{{beneficiary_id}}\"\n  }\t\n"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "1b. Create new transaction (GBP - BACS)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-UK-BACS\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{ledger1_id}}\",\n    \"beneficiary_id\": \"{{beneficiary_id}}\"\n  }\t\n"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "1c. Create new transaction (EUR - SEPA step2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-EU-SEPA-Step2\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{ledger1_id}}\",\n    \"beneficiary_id\": \"{{beneficiary_id}}\"\n  }\t"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "1d. Create new transaction (EUR - SEPA target2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-EU-SEPA-Target2\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{ledger1_id}}\",\n    \"beneficiary_id\": \"{{beneficiary_id}}\"\n  }\t"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Fetch all transactions in specified time range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Creates multiple send transaction atomically",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"payment_type\": \"payment-type-UK-FasterPayments\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{ledger1_id}}\",\n    \"beneficiary_id\": \"{{beneficiary_id}}\"\n  },\n  {\n    \"payment_type\": \"payment-type-UK-BACS\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{ledger2_id}}\",\n    \"beneficiary_id\": \"{{beneficiary_id}}\"\n  },\n\t.... and so forth\n]"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/bulk",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"bulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Create new FX transaction (beneficiary,PayrNet,swift)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"partner_product_fx\": \"PayrNet-FX-1\",\n  \"payment_method\": \"swift\",\n  \"fixed_side\": \"beneficiary\",\n  \"reference\": \"this is a test payment\",\n  \"amount\": \"0\",\n  \"ledger_from_id\": \"6630b391-c5ce-46c1-9d23-a82a9e27f82d\",\n  \"reason\": \"random sequence of characters\",\n  \"beneficiary_id\": \"6630b391-c5ce-46c1-9d23-a82a9e27f82d\",\n  \"beneficiary_account_id\": \"bb8b2428-f94c-41df-8e82-a895ab4d6ac8\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/fx",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"fx"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Get Quote for currency pair exchange",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"partner_product_fx\": \"PayrNet-FX-1\",\n  \"sender_asset_class\": \"currency\",\n  \"sender_asset_type\": \"eur\",\n  \"fixed_side\": \"beneficiary\",\n  \"beneficiary_asset_class\": \"currency\",\n  \"beneficiary_asset_type\": \"eur\",\n  \"amount\": \"0\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/fx/quote",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"fx",
								"quote"
							]
						},
						"description": "beneficiary_asset_class:\n[ commodity, currency ]\n\nbeneficiary_asset_type:\n[ aud, chf, cad, sek, goldbloc, usd, nok, whisky, jpy, nzd, gold, gbp, eur ]\n\nfixed_side:\n[ beneficiary, sender ]\n\npartner_product_fx:\n[ Airwallex-FX-1, PayrNet-FX-1 ]\n\nsender_asset_class:\n[ commodity, currency ]\n\nsender_asset_type:\n[ aud, chf, cad, sek, goldbloc, usd, nok, whisky, jpy, nzd, gold, gbp, eur ]\n\n\n"
					},
					"response": []
				},
				{
					"name": "6. Create new inter-ledger transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_to_id\": \"{{ledger1_id}}\",\n  \"ledger_from_id\": \"{{ledger2_id}}\",\n  \"amount\": \"0\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Create multiple new inter-ledger transactions atomically",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n  \"ledger_to_id\": \"{{ledger1_id}}\",\n  \"ledger_from_id\": \"{{ledger2_id}}\",\n    \"amount\": \"0\",\n    \"transaction_meta\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n  \"ledger_to_id\": \"{{ledger1_id}}\",\n  \"ledger_from_id\": \"{{ledger2_id}}\",\n    \"amount\": \"0\",\n    \"transaction_meta\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n  \"ledger_to_id\": \"{{ledger1_id}}\",\n  \"ledger_from_id\": \"{{ledger2_id}}\",\n    \"amount\": \"0\",\n    \"transaction_meta\": {\n      \"foo\": \"bar\"\n    }\n  },\n\tand so forth...\n]"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger/bulk",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger",
								"bulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Try if inter-ledger transactions is valid and if it's missing any data needed in customer/partner firewall",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_to_id\": \"{{ledger1_id}}\",\n  \"ledger_from_id\": \"{{ledger2_id}}\",\n  \"amount\": \"0\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger/try",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger",
								"try"
							]
						},
						"description": "Transaction is not created you just get information if it would be ok if you submit it.\n\nYou may need to call this multiple times because after you fill in some data that you currently miss we can discover that you need another data."
					},
					"response": []
				},
				{
					"name": "9. Credit the specified virtual ledger with set amount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  },\n  \"amount\": \"0\",\n  \"ledger_id\": \"{{ledger1_id}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/manual-credit",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"manual-credit"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. Debit the specified virtual ledger with the set amount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  },\n  \"amount\": \"0\",\n  \"ledger_id\": \"{{ledger1_id}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/manual-debit",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"manual-debit"
							]
						}
					},
					"response": []
				},
				{
					"name": "11. Try if transaction is valid and if it's missing any data needed in customer/partner firewall",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payment_credit_date\": \"2017-03-06\",\n  \"payment_type\": \"payment-type-EU-SEPA-Step2\",\n  \"ledger_id\": \"bb8b2428-f94c-41df-8e82-a895ab4d6ac8\",\n  \"who_pays_charges\": \"shared\",\n  \"reference\": \"this is a test payment\",\n  \"amount\": \"0\",\n  \"ledger_from_id\": \"6630b391-c5ce-46c1-9d23-a82a9e27f82d\",\n  \"beneficiary_id\": \"8763b5df-a61c-4f77-9724-41ca9cde3654\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/try",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"try"
							]
						}
					},
					"response": []
				},
				{
					"name": "12. Fetch transaction object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "13. Update existing transaction meta data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "14. Fetch latest firewall calculation report for transaction",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}/compliance-firewall-calculation",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id}}",
								"compliance-firewall-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "15. Upload invoice or other proofing document for transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": ""
								}
							]
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}/invoices",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id}}",
								"invoices"
							]
						}
					},
					"response": []
				},
				{
					"name": "16. Move existing transaction from missing data state which will rerun firewalls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id}}",
								"rerun-firewall"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Webhook",
			"item": [
				{
					"name": "1. Set your webhook URL and secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_secret\": \"some_secret_key_sent_with_every_event\",\n  \"webhook_url\": \"{{webhook_url}}\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Delete your webhook settings",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get your webhook information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get your failed webhook deliveries information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook/failed-to-deliver",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook",
								"failed-to-deliver"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Update your webhook secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_secret\": \"another_secret_key_sendt_with_every_event\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook/update-secret",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook",
								"update-secret"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e9087c3c-0678-48d9-afef-9717c613459a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "60b3265a-6e31-41ac-91b6-f12c5d1b3c64",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}