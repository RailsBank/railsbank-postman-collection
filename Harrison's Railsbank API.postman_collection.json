{
	"info": {
		"name": "Harrison's Railsbank API",
		"_postman_id": "f910a029-ed5c-7324-13b0-ac566e158668",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Railsbank API",
			"description": null,
			"item": [
				{
					"name": "Info about self",
					"description": "",
					"item": [
						{
							"name": "Whoami",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/me",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"me"
									]
								},
								"description": "also set test time stamp"
							},
							"response": []
						},
						{
							"name": "Customer's ledgers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Customer's ledgers holder id filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers?holder_id={{enduser_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers"
									],
									"query": [
										{
											"key": "holder_id",
											"value": "{{enduser_id}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Customer's ledgers partner product filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers?partner_product={{euroledger_prodref}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers"
									],
									"query": [
										{
											"key": "partner_product",
											"value": "{{euroledger_prodref}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Customer's endusers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"endusers"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Attempt to set a bad webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "457d524a-cb78-4309-8784-c7a76f7f94b6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"webhook_url\": \"https://requestb.in/1i45mrh1\",\r\n  \"webhook_secret\": \"our_first_webhook\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/webhook",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"webhook"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Attempt to set a bad webhook copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "457d524a-cb78-4309-8784-c7a76f7f94b6",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"webhook_url\": \"https://requestb.in/1i45mrh1\",\r\n  \"webhook_secret\": \"our_first_webhook\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/webhook",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"webhook"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Customer Webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/webhook",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"webhook"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Customer's partners",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/my/partners",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"my",
										"partners"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Customer's products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/my/products",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"my",
										"products"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Helper: Delay 2s",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/2",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Set product specific properties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "71e70546-9ba4-4819-b229-004dd424cb64",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"api_key\": \"{{Airwallex_API_Key}}\",\r\n  \"client_id\": \"XS7OnlTgS8msEPDMLJ0l0g\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/my/products/Airwallex-FX-1",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"my",
										"products",
										"Airwallex-FX-1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "List of customer notifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"from_date\", jsonData.from_date);",
											"pm.environment.set(\"to_date\", jsonData.to_date);"
										],
										"id": "04ec3cf5-fec7-482b-8f26-9106bd9d405e",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/notifications?from_date=2017-11-09&to_date=2019-10-10",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"notifications"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2017-11-09",
											"equals": true
										},
										{
											"key": "to_date",
											"value": "2019-10-10",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Billing summary for a month",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b1cd5ff-6951-4d4e-8d01-8d120599cd7a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/billing/export-csv?year-month={{year_month}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"billing",
										"export-csv"
									],
									"query": [
										{
											"key": "year-month",
											"value": "{{year_month}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Endusers",
					"description": "",
					"item": [
						{
							"name": "Create an Enduser (individual)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"enduser_id\", jsonData.enduser_id);"
										],
										"id": "f1d4ec33-80a5-4fa4-94fc-8270371062ff",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"person\": { \n       \"name\": \"Rebecca Baker\", \n       \"email\": \"rebeccabaker@example.net\", \n       \"date_of_birth\": \"1970-11-05\", \n       \"telephone\": \"+44 22 626 2626\", \n       \"address\": {  \n         \"address_refinement\": \"Apartment 42\", \n         \"address_number\": \"29\", \n         \"address_street\": \"Acacia Road\", \n         \"address_city\": \"Nuttytown\", \n         \"address_postal_code\": \"FX20 7XS\", \n         \"address_iso_country\": \"GBR\"\n         \n       }, \n       \"address_history\": [ \n         { \n           \"address_refinement\": \"Apartment 77\", \n           \"address_number\": \"42\", \n           \"address_street\": \"Kirschbaumstraße\", \n           \"address_city\": \"Berlin\", \n           \"address_postal_code\": \"12059\", \n           \"address_iso_country\": \"DE\", \n           \"address_start_date\": \"2000-09-02\", \n           \"address_end_date\": \"2002-12-20\" \n         } \n       ], \n       \"nationality\": [ \n         \"Czech\" \n       ], \n       \"country_of_residence\": [ \n         \"GBR\" \n       ], \n       \"date_onboarded\": \"2015-11-21\" \n     }, \n      \"enduser_meta\": { \n       \"foo\": \"baa\", \n      \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\" \n     } \n   }\n"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"endusers"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Check List of Endusers",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"endusers"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Check Details for an Enduser",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"endusers",
										"{{enduser_id}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Enduser Wait",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"endusers",
										"{{enduser_id}}",
										"wait"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update an Enduser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"enduser_meta\": {\r\n     \"foo\": \"baa\",\r\n        \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n    },\r\n       \r\n  \"person\": {\r\n    \"name\": \"Eric Wimp\",\r\n    \"pep\": false\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"endusers",
										"{{enduser_id}}"
									]
								},
								"description": "update receiver beneficiary\n"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Ledgers",
					"description": "",
					"item": [
						{
							"name": "Helper: Delay 5s",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/5",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"5"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create a EUR Ledger for Enduser",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65e2a74c-4703-47eb-a0be-0b9894eaa753",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"ledger_id\", jsonData.ledger_id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"{{euroledger_prodref}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ledger Wait",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{ledger_id}}",
										"wait"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Fetch ledger entity copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"iban\", jsonData.iban);"
										],
										"id": "ff6639ff-7839-46f2-b026-3c636ed39f26",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{ledger_id}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create a GBP Ledger for Enduser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"GBPledger_id\", jsonData.ledger_id);",
											""
										],
										"id": "bc166afe-bbaf-473c-b01e-6df91b76bf66",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"{{gbpledger_prodref}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ledger Wait",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{GBPledger_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{GBPledger_id}}",
										"wait"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Fetch GBP ledger entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"accountnumber\", jsonData.uk_account_number);",
											"postman.setEnvironmentVariable(\"sortcode\", jsonData.uk_sort_code);"
										],
										"id": "4d572602-3677-4ac9-b654-94dd772e8282",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{GBPledger_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{GBPledger_id}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Helper: Delay 5s",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/5",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"5"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create Second Ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"if (responseCode.code === 200){",
											"    var jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable(\"second_ledger_id\", jsonData.ledger_id);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"partner_product\": \"{{euroledger_prodref}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ledger Wait",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{second_ledger_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{second_ledger_id}}",
										"wait"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Assign an IBAN for ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6bedffb-ea47-4a9f-ac01-27e4c3f10cb2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "adff4a29-c4f1-4746-b644-c1b309fa69c9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/assign-iban",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{ledger_id}}",
										"assign-iban"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Fetch ledger entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f50d7b10-ea31-4449-b77b-de90e08988d0",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"eur_iban_1\", jsonData.iban);",
											"postman.setEnvironmentVariable(\"bic_swift_1\", jsonData.bic_swift);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{ledger_id}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "pseudo-credit euro ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"if (responseCode.code === 200){",
											"    var jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable(\"second_ledger_id\", jsonData.ledger_id);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"1000\",\r\n  \"bic_swift\": \"{{bic_swift_1}}\",\r\n  \"iban\": \"{{eur_iban_1}}\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/dev/customer/transactions/receive",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"dev",
										"customer",
										"transactions",
										"receive"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Helper: Delay 5s",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/10",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"10"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Assign IBAN to Second Ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{second_ledger_id}}/assign-iban",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{second_ledger_id}}",
										"assign-iban"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Fetch second ledger entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be94c516-f8df-44da-8434-1dfad219879f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"secondledgeriban\", jsonData.iban);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{second_ledger_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{second_ledger_id}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create a Whisky Ledger for Enduser",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"whisky_ledger_id\", jsonData.ledger_id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"commodity\",\r\n  \"asset_type\": \"whisky\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/virtual",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"virtual"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Helper: Delay 5s",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/10",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"10"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "List of modified ledgers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "fa967dca-5c3f-4c3b-8aa3-ccfdfd58d19a",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/changed?from_date={{start_date}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"changed"
									],
									"query": [
										{
											"equals": true,
											"key": "from_date",
											"value": "{{start_date}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List of ledger entries in time frame",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "fa967dca-5c3f-4c3b-8aa3-ccfdfd58d19a",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{GBPledger_id}}/entries?from_date={{start_date}}&to_date{{end_date}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{GBPledger_id}}",
										"entries"
									],
									"query": [
										{
											"key": "from_date",
											"value": "{{start_date}}",
											"equals": true
										},
										{
											"key": "to_date{{end_date}}",
											"value": "",
											"equals": false
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List of ledgers unassigned",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/unassigned",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"unassigned"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Helper: Delay 5s",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/5",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"5"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Check Whisky Ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9115137-53f9-4f92-9623-d08c8c7911f6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody)",
											"",
											"pm.globals.unset(\"variable_key\");"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{whisky_ledger_id}}/",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{whisky_ledger_id}}",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Check Waiting Status for Second Ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"postman.setEnvironmentVariable(\"second_ledger_amount\", jsonData.amount);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{second_ledger_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{second_ledger_id}}",
										"wait"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Find ledgers based on account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "f8bc122a-5c71-4ef8-b3d8-398b74e662a6",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/by-uk-bank-account?uk_account_number={{accountnumber}}&uk_sort_code={{sortcode}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"by-uk-bank-account"
									],
									"query": [
										{
											"equals": true,
											"key": "uk_account_number",
											"value": "{{accountnumber}}"
										},
										{
											"equals": true,
											"key": "uk_sort_code",
											"value": "{{sortcode}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Check Status of IBAN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"iban\", jsonData.iban);",
											"postman.setEnvironmentVariable(\"current_balance\", jsonData.amount);",
											"postman.setEnvironmentVariable(\"bic_swift_1\", jsonData.bic_swift);",
											"var ledger_iban_status = jsonData.ledger_iban_status === \"ledger-iban-status-ok\";",
											"tests[\"IBAN status ok\"] = ledger_iban_status;",
											"",
											"if(!ledger_iban_status){",
											"    postman.setNextRequest(null);",
											"}"
										],
										"id": "70a1fe8c-647d-4db4-9565-a0bca46eed2c",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{ledger_id}}",
										"wait"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get ledger entries in time frame",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											""
										],
										"id": "b70d4c9b-d35a-4442-a2be-cfcc98e8fdda",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_id}}/entries?from_date={{start_date}}&to_date={{end_date}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{ledger_id}}",
										"entries"
									],
									"query": [
										{
											"equals": true,
											"key": "from_date",
											"value": "{{start_date}}"
										},
										{
											"equals": true,
											"key": "to_date",
											"value": "{{end_date}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Check Status of GBP Ledger",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var ledger_status = jsonData.ledger_status === \"ledger-status-ok\";",
											"tests[\"Ledger status ok\"] = ledger_status;",
											"",
											"if(!ledger_status){",
											"    postman.setNextRequest(null);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/ledgers/{{GBPledger_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"ledgers",
										"{{GBPledger_id}}",
										"wait"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Helper: Delay 2s",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "2bfb4859-ea8e-4050-9b93-131d4511a4cc",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "adff4a29-c4f1-4746-b644-c1b309fa69c9",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/2",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"2"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Beneficiaries",
					"description": "",
					"item": [
						{
							"name": "List all beneficiaries",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "366298c7-f705-485a-bb04-11a73740d6c9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Add a New Beneficiary (Individual) EUR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"beneficiary_id\", jsonData.beneficiary_id);"
										],
										"id": "b53e6b21-b686-4a85-8d43-d69794934f84",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"iban\": \"{{iban}}\",\r\n  \"holder_id\": \"{{enduser_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"person\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"address_history\": [\r\n      {\r\n        \"address_refinement\": \"Apartment 77\",\r\n        \"address_number\": \"42\",\r\n        \"address_street\": \"Kirschbaumstraße\",\r\n        \"address_city\": \"Berlin\",\r\n        \"address_region\": \"California\",\r\n        \"address_postal_code\": \"12059\",\r\n        \"address_iso_country\": \"DE\",\r\n        \"address_start_date\": \"2000-09-02\",\r\n        \"address_end_date\": \"2002-12-20\"\r\n      }\r\n    ],\r\n    \"date_onboarded\": \"2015-11-21\",\r\n    \"email\": \"bananaman@example.net\",\r\n    \"name\": \"Eric Wimp\",\r\n    \"address\": {\r\n      \"address_refinement\": \"Apartment 42\",\r\n      \"address_number\": \"29\",\r\n      \"address_street\": \"Acacia Road\",\r\n      \"address_city\": \"Nuttytown\",\r\n      \"address_region\": \"California\",\r\n      \"address_postal_code\": \"FX20 7XS\",\r\n      \"address_iso_country\": \"GB\"\r\n    },\r\n    \"telephone\": \"+44 22 626 2626\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"Czech\"\r\n    ]\r\n  },\r\n  \"bic_swift\": \"SPSRSKBAXXX\",\r\n  \"beneficiary_meta\": {\r\n    \"foo\": \"baa\",\r\n    \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries"
									]
								},
								"description": "current receiver: \nuser: 59776cff-3b5e-4ad8-8c12-3301386ab7ab\nledger: 59777178-b126-436b-a6c7-4c4c18620937\niban: SK5500000011501000099891"
							},
							"response": []
						},
						{
							"name": "Update a Beneficiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n  \"person\": {\r\n    \"name\": \"Bananaman\",\r\n    \"pep\": false\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}"
									]
								},
								"description": "update receiver beneficiary\n"
							},
							"response": []
						},
						{
							"name": "View Beneficiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95f3c57a-2dd8-4452-8805-015da070ee61",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/wait",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}",
										"wait"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Add a GBP account for beneficiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "421d2d0c-af65-493a-b692-8caacac6af8f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"GBPbennyaccount_id\", jsonData.account_id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account_number\": \"{{accountnumber}}\",\r\n  \"bank_country\": \"GB\",\r\n  \"bank_code\": \"040052\",\r\n  \"bank_name\": \"PayrNET\",\r\n  \"asset_type\": \"gbp\",\r\n  \"asset_class\": \"currency\",\r\n  \"bank_code_type\": \"sort-code\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}",
										"accounts"
									]
								},
								"description": "current receiver: \nuser: 59776cff-3b5e-4ad8-8c12-3301386ab7ab\nledger: 59777178-b126-436b-a6c7-4c4c18620937\niban: SK5500000011501000099891"
							},
							"response": []
						},
						{
							"name": "Return beneficiary's accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b1cd5ff-6951-4d4e-8d01-8d120599cd7a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}",
										"accounts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Return one of beneficiary's accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30d5944b-a594-4895-a29d-59bef0e80a90",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts/{{GBPbennyaccount_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}",
										"accounts",
										"{{GBPbennyaccount_id}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update one of beneficiary's accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"id": "e11dace6-a75f-4055-9fcf-c71f74c7bdf7",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"person\": \"Manzanaman\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts/{{GBPbennyaccount_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}",
										"accounts",
										"{{GBPbennyaccount_id}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Make one of beneficiary's accounts default",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "223c2af1-895a-4378-9d05-74552d270dd5",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id}}/accounts/{{GBPbennyaccount_id}}/make-default",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"beneficiaries",
										"{{beneficiary_id}}",
										"accounts",
										"{{GBPbennyaccount_id}}",
										"make-default"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transactions",
					"description": "",
					"item": [
						{
							"name": "Standard transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b4fc592-be53-4d2f-9f0e-06b0b14c2013",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Amount not positve\"] = jsonData.error_detail === \"amount-not-positive\";"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ledger_from_id\": \"{{GBPledger_id}}\",\r\n  \"beneficiary_id\": \"{{beneficiary_id}}\",\r\n  \"payment_type\": \"payment-type-UK-FasterPayments\",\r\n  \"amount\": \"0\",\r\n  \"reference\": \"xyz\",\r\n  \"transaction_meta\": {\r\n    \"info\": \"{{test_info}}\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Credit virtual ledger with 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"environment.delayTimerStart = new Date();"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ledger_id\": \"{{whisky_ledger_id}}\",\r\n  \"amount\": \"4\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/manual-credit",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"manual-credit"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Debit virtual ledger with 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebcb1f75-eac3-403b-b39d-34dd8fb1393f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"environment.delayTimerStart = new Date();",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"transaction_id\", jsonData.transaction_id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ledger_id\": \"{{whisky_ledger_id}}\",\r\n  \"amount\": \"4\"\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/manual-debit",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"manual-debit"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Check Transaction Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91a80afd-7819-471b-b908-6ff12988b657",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"{{transaction_id}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Inter-Ledger Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f4a12ef-5fc2-46a6-b7f6-f99104e68486",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"environment.delayTimerStart = new Date();",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"inter-ledgertransaction_id\", jsonData.transaction_id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2\",\n  \"ledger_from_id\": \"{{ledger_id}}\",\n  \"ledger_to_id\": \"{{second_ledger_id}}\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"inter-ledger"
									]
								},
								"description": "from ledger id to second ledger id"
							},
							"response": []
						},
						{
							"name": "Transactions in time frame",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions?from-date={{start_date}}&to_date{{end_date}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions"
									],
									"query": [
										{
											"key": "from-date",
											"value": "{{start_date}}",
											"equals": true
										},
										{
											"key": "to_date{{end_date}}",
											"value": "",
											"equals": false
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "FX Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Amount not positve\"] = jsonData.error_detail === \"amount-not-positive\";",
											""
										],
										"id": "6bf0448e-4663-4823-9d00-952442c5df56",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"2\",\r\n  \"ledger_from_id\": \"{{GBPledger_id}}\",\r\n  \"partner_product_fx\": \"Airwallex-FX-1\",\r\n  \"reason\": \"p2p_sports_and_entertainment\",\r\n  \"beneficiary_id\": \"{{beneficiary_id}}\",\r\n  \"reference\": \"this is a test\",\r\n  \"transaction_meta\": {\r\n    \"foo\": \"bar\"\r\n  }\r\n\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/fx",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"fx"
									]
								},
								"description": "using SEPA\n"
							},
							"response": []
						},
						{
							"name": "Transaction Try",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8647a4b3-ca8e-4681-bdb9-1cf8b5e29549",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"payment_type\": \"payment-type-UK-FasterPayments\",\n  \"who_pays_charges\": \"shared\",\n  \"reference\": \"123456789012345678\",\n  \"amount\": \"4.00\",\n  \"ledger_from_id\": \"{{GBPledger_id}}\",\n  \"beneficiary_id\": \"{{beneficiary_id}}\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  },\n  \"cut_off_time_implementation\": \"loose\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/try",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"try"
									]
								},
								"description": "from ledger id to second ledger id"
							},
							"response": []
						},
						{
							"name": "Inter-ledger try",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"10\",\n  \"ledger_from_id\": \"{{ledger_id}}\",\n  \"ledger_to_id\": \"{{second_ledger_id}}\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger/try",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"inter-ledger",
										"try"
									]
								},
								"description": "from ledger id to second ledger id"
							},
							"response": []
						},
						{
							"name": "Helper: Delay 2s",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "2bfb4859-ea8e-4050-9b93-131d4511a4cc",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "adff4a29-c4f1-4746-b644-c1b309fa69c9",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/delay/2",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Re-run firewalls",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id}}/rerun-firewall",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"{{transaction_id}}",
										"rerun-firewall"
									]
								},
								"description": "from ledger id to second ledger id"
							},
							"response": []
						},
						{
							"name": "Update Transaction metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"transaction_meta\": {\r\n    \"info\": \"{{test_info}}\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/transactions/{{inter-ledgertransaction_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"transactions",
										"{{inter-ledgertransaction_id}}"
									]
								},
								"description": "update receiver beneficiary\n"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Compliance",
					"description": "",
					"item": [
						{
							"name": "Compliance officer info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-contact",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-contact"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Set firewall rules (endusers)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"compliance_firewall_rules\": \"[rule :always-pass ok]\"\r\n\r\n                       }"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"endusers"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Test firewall rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :always-pass ok]]\",\n  \"transaction_id\": \"{{inter-ledgertransaction_id}}\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions/test",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions",
										"test"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Firewall rules history (transactions)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions/history",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions",
										"history"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Firewall rules history (endusers)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers/history",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"endusers",
										"history"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Firewall rules history (beneficiaries)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries/history",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"beneficiaries",
										"history"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Firewall rules (beneficiaries)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"beneficiaries"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Firewall rules (transactions)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Firewall rules (endusers)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"endusers"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Firewall dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b220a4a-2d05-45a7-8136-da722a125ba9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"dataset_id\", jsonData.dataset_id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dataset_data\": \"Country,Risk\\nUSA,low\\nISR,high\",\n  \"dataset_name\": \"countries-by-risk-level\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-static-data",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-static-data"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Firewall dataset (no dataset yet)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-static-data/{{dataset_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-static-data",
										"{{dataset_id}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Compliance manual",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-manual",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-manual"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List of objects in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Resolve beneficiary in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21d6e1c2-26b8-4bf0-87e3-f41537205db8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"invalid-state-of-entity\"] = jsonData.error === \"invalid-state-of-entity\";"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qr_status\": \"pass\",\n  \"comment\": \"smells like roses\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id}}/resolve",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"beneficiaries",
										"{{beneficiary_id}}",
										"resolve"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Comment on beneficiary in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"looks pretty good to me\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id}}/comments",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"beneficiaries",
										"{{beneficiary_id}}",
										"comments"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Resolve enduser in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1512f41b-1d8c-4c9a-a2cb-82d866f73c84",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"invalid-state-of-entity\"] = jsonData.error === \"invalid-state-of-entity\";",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qr_status\": \"pass\",\n  \"comment\": \"smells like roses\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_id}}/resolve",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"endusers",
										"{{enduser_id}}",
										"resolve"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Comment on enduser in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"looks pretty good to me\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_id}}/comments",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"endusers",
										"{{enduser_id}}",
										"comments"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Resolve transaction in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c007861-2631-4cc4-af15-ed99db1d3400",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"incorrect-state\"] = jsonData.error === \"incorrect-state\";",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"qr_status\": \"pass\",\n  \"comment\": \"smells like roses\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}/resolve",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"transactions",
										"{{transaction_id}}",
										"resolve"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Comment on transaction in quarantine",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7aa756e-d16c-427e-b211-d340a97e93f3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"incorrect-state\"] = jsonData.error === \"incorrect-state\";"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"looks pretty good to me\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}/comments",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"transactions",
										"{{transaction_id}}",
										"comments"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Other",
					"description": "",
					"item": [
						{
							"name": "Get Version ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (responseCode.code === 200){",
											"    var jsonData = JSON.parse(responseBody);",
											"    var version = jsonData.version;",
											"    var info = new Date().toISOString() + \" | \"+version;",
											"    postman.setEnvironmentVariable(\"test_info\", info);",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/version",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"version"
									]
								},
								"description": "also set test time stamp"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Partners",
					"description": "",
					"item": [
						{
							"name": "See Avaliable Partners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "efe803ea-4e9a-4e65-bfdf-068eaf425dd6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/my/partners",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"my",
										"partners"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "1e631e0d-893d-450e-a6ce-294721419f62",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"id": "8e305cd7-5d8e-4b26-ab94-43e8bb877913",
						"type": "text/javascript"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					""
				],
				"id": "76d90e6b-0448-418e-9425-64a39e2b1f71",
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					""
				],
				"id": "de317e8e-be2e-4f84-97ab-0490eeadb6f4",
				"type": "text/javascript"
			}
		}
	]
}