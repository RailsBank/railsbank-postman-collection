{
	"info": {
		"_postman_id": "563e1b51-f81e-4bef-897c-d3374c277c91",
		"name": "XiTi Regression Pack (prod_play_live)",
		"description": "\n-xiti",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Part 1 - About Customer and Misc.",
			"item": [
				{
					"name": "1a. Returns version of API Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0767d7e2-191e-4b0c-9de3-3e8176eb1e7f",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"version\", jsonData.version);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/version",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "1b. Get Customer's own information Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "432fade3-17f9-42bd-a35c-39b53a35c6fa",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"customer_id\", jsonData.customer_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/me",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "1c. Get a list of Customer's authorised partner banks Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31fd0542-3d3c-4e2e-83e4-0c3ff8673e9e",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/my/partners",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"my",
								"partners"
							]
						}
					},
					"response": []
				},
				{
					"name": "1d. Get list of Customer's enabled products Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc601454-05f7-49f9-adbd-ed007d91b326",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/my/products",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"my",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "1e. Return list of notifications created between dates Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e169e0cc-4fb5-44f8-bb29-5319d0679e3a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/notifications",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 2 - Webhooks",
			"item": [
				{
					"name": "2a. Set your webhook URL and secret Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e7ed572-96eb-419b-8bb9-c22f67da6046",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"webhook_url\": \"https://reqbin-int.railsbank.com/1at2v6b1\",\r\n  \"webhook_secret\": \"{{version}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "2b. Get your webhook information Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6487bc13-edac-406b-b5c9-d462cac85cac",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "2c. Update your webhook secret Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f632bb07-4f2b-449d-925f-23c826036465",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_secret\": \"{{version}} again\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook/update-secret",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook",
								"update-secret"
							]
						}
					},
					"response": []
				},
				{
					"name": "2d. Get your webhook information Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8136eea-2e17-4348-a8e2-69301be2412c",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "2e. Get your failed webhook deliveries information Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ca3f3438-d7ac-4053-92fe-53b5945828b7",
								"exec": [
									"var moment = require('moment')",
									"pm.globals.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eee145b5-2045-4416-9b8d-96f7d03c8d6e",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook/failed-to-deliver?starting_at_date={{timestamp}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook",
								"failed-to-deliver"
							],
							"query": [
								{
									"key": "starting_at_date",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2f. Delete your webhook settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3fead76-8909-4c14-b59f-abaa4919c4a1",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "2g. Attempt to set a BAD webhook Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e450626-3846-4d68-9001-d865cd3be421",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"webhook_url\": \"=efuheiufuerf\",\r\n  \"webhook_secret\": \"our_first_webhook\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/webhook",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"webhook"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 3 - Endusers",
			"item": [
				{
					"name": "3a. List all Endusers created by the Customer Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5a9a6ea-9e4f-4567-b511-199abcfc1bf9",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "3b. Add new Enduser (Person) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab2d48e9-419b-41a5-aab2-a3cfdf9e53b0",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduser_person_id\", jsonData.enduser_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"person\": { \n       \"name\": \"Enduser Person\", \n       \"email\": \"enduser.person@email.com\", \n       \"date_of_birth\": \"1999-11-11\", \n       \"telephone\": \"+44 12 345 6789\", \n       \"address\": {  \n         \"address_refinement\": \"Apartment 12\", \n         \"address_number\": \"34\", \n         \"address_street\": \"Mahogany Road\", \n         \"address_city\": \"London\", \n         \"address_postal_code\": \"FX20 7XS\",\n         \"address_iso_country\": \"GBR\" \n       }, \n       \"address_history\": [ \n         { \n           \"address_refinement\": \"Apartment 77\", \n           \"address_number\": \"42\", \n           \"address_street\": \"Kirschbaumstraße\", \n           \"address_city\": \"Berlin\", \n           \"address_postal_code\": \"12059\", \n           \"address_iso_country\": \"DE\",\n           \"address_start_date\": \"2000-09-02\", \n           \"address_end_date\": \"2002-12-20\" \n         } \n       ], \n       \"nationality\": [ \n         \"British\" \n       ], \n       \"country_of_residence\": [ \n         \"GBR\" \n       ], \n       \"date_onboarded\": \"2012-10-21\" \n     }, \n      \"enduser_meta\": { \n       \"foo\": \"baa\", \n      \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\" \n  } \n} "
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "3c. Fetch Enduser (person) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63ae5985-ef6d-4397-93b4-c646ddfc0cf2",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_person_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_person_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3d. Add new Enduser (Company) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00d689dc-a6a3-4e54-92e6-fbf9c2914c60",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduser_company_id\", jsonData.enduser_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  { \n \"company\": {\n    \"name\": \"Example Company\",\n    \"trading_name\": \"Example Company Ltd.\",\n    \"web_site\": \"www.website.com\",\n    \"industry\": \"Financial Services\",\n    \"listed_on_stock_exchange\": false,\n    \"trading_addresses\": [\n      {\n         \"address_refinement\": \"Floor 15\", \n         \"address_number\": \"20\", \n         \"address_street\": \"The Strand\", \n         \"address_city\": \"London\", \n         \"address_postal_code\": \"SS8 9JH\", \n         \"address_iso_country\": \"GBR\" \n      }\n    ],\n    \"directors\": [\n      {\n        \"date_appointed\": \"1990-01-01\",\n        \"job_title\": \"CEO\",\n        \"is_also_ubo\": false,\n        \"person\": {\n          \"country_of_residence\": [\n            \"USA\"\n          ],\n          \"pep\": false,\n          \"email\": \"johnsmith@gmail.com\",\n          \"name\": \"John Smith\",\n          \"social_security_number\": \"090606\",\n          \"telephone\": \"+44 98 765 4321\",\n          \"date_of_birth\": \"1981-02-03\",\n          \"nationality\": [\n            \"American\"\n          ]\n        }\n      }\n    ]\n }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "3e. Fetch Enduser (company) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b05a551c-5234-409e-97b9-1a9a8c886df1",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_company_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_company_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3f. Update existing Enduser Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4e21dc6-fe79-4b6c-a2ab-3081069b261b",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enduser_meta\": {\n     \"foo\": \"baa\",\n        \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_company_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_company_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3g. Fetch latest firewall calculation report for Enduser Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e806d241-e67c-45b7-8839-5db8ba3ed791",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_person_id}}/compliance-firewall-calculation",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_person_id}}",
								"compliance-firewall-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "3h. Move existing Enduser from missing data to state which will rerun firewalls",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69e041ad-1e29-4bc5-a561-7179a16c4e58",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"partner_product\": \"Railsbank-Identity-and-Verification-Service-1\",\n  \"idv_check_scenario\": \"PayrNet-IdVS1-identity-card-check\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_person_id}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_person_id}}",
								"rerun-firewall"
							]
						}
					},
					"response": []
				},
				{
					"name": "3i. Wait until Enduser is in final state Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7cf8f01-52a2-4c75-bfdc-fd193b5e50b8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/endusers/{{enduser_person_id}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"endusers",
								"{{enduser_person_id}}",
								"wait"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 4 - Ledgers",
			"item": [
				{
					"name": "4a. List all Ledgers Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f52d22d-e3c8-4fb7-8b3e-27bf3772e90d",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "4b. List Customer's Ledgers Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f56232bc-a8eb-42f6-952d-e1c9412c8695",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers?holder_id={{customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{customer_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4c. List Enduser Person's Ledgers Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24724da7-7c7d-42f3-a1bd-cab693bc9292",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers?holder_id={{enduser_person_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{enduser_person_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4d. List Enduser Company's Ledgers Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfd76a32-205d-4d71-a51d-99e1de82153d",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers?holder_id={{enduser_company_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							],
							"query": [
								{
									"key": "holder_id",
									"value": "{{enduser_company_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4e. Add new Ledger for the Customer (GBP) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d848c50-9d69-4c34-9dfe-a1e9ad23e6fb",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_gbp_customer\", jsonData.ledger_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{customer_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-omnibus\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "4ei. Fetch it",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fd3e7a9-febf-40f2-8cb6-51ed1de30fa4",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"customer_gbp_ledger_account_number\", jsonData.uk_account_number);",
									"postman.setEnvironmentVariable(\"customer_gbp_ledger_sort_code\", jsonData.uk_sort_code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_gbp_customer}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_gbp_customer}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "4f. Add new Ledger for the Customer (EUR) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c24cff47-65e6-4828-86e7-b965e044fff8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_eur_customer\", jsonData.ledger_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{customer_id}}\",\r\n  \"partner_product\": \"PayrNet-EUR-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-omnibus\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 2s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "4fi. Assign IBAN and Bic for given Ledger Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2633274d-1413-4805-abe5-706557575073",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_eur_customer}}/assign-iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_eur_customer}}",
								"assign-iban"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 5s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/5",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "4fii. Fetch it",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b81031c-ffab-4e0c-862d-92052c90754d",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"customer_eur_ledger_bic_swift\", jsonData.bic_swift);",
									"postman.setEnvironmentVariable(\"customer_eur_ledger_iban\", jsonData.iban);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_eur_customer}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_eur_customer}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "4g. Add new Ledger for Enduser Person (GBP) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf579b88-b722-429d-b4f4-8079f38e6bba",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_gbp_enduserP\", jsonData.ledger_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_person_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "4gi. Fetch it",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3dd2a84-58a6-437c-8482-be7d2e414d10",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduserP_gbp_ledger_account_number\", jsonData.uk_account_number);",
									"postman.setEnvironmentVariable(\"enduserP_gbp_ledger_sort_code\", jsonData.uk_sort_code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_gbp_enduserP}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_gbp_enduserP}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "4h. Add new Ledger for Enduser Person (EUR) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13d9359d-417c-403d-bc3a-5dae8af2b534",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_eur_enduserP\", jsonData.ledger_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_person_id}}\",\r\n  \"partner_product\": \"PayrNet-EUR-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 2s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "4hi. Assign IBAN/BIC for EnduserP_EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2633274d-1413-4805-abe5-706557575073",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_eur_enduserP}}/assign-iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_eur_enduserP}}",
								"assign-iban"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 2s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "4hii. Fetch it",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d595307-2e14-444e-837b-6a97715d2af8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduserP_eur_ledger_bic_swift\", jsonData.bic_swift);",
									"postman.setEnvironmentVariable(\"enduserP_eur_ledger_iban\", jsonData.iban);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_eur_enduserP}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_eur_enduserP}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "xxxxxx. Add new Ledger for Enduser Person (GBP) Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf579b88-b722-429d-b4f4-8079f38e6bba",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_gbp_enduserC\", jsonData.ledger_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_company_id}}\",\r\n  \"partner_product\": \"PayrNet-GBP-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"gbp\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "xxxxxx. Fetch it Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3dd2a84-58a6-437c-8482-be7d2e414d10",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduserC_gbp_ledger_account_number\", jsonData.uk_account_number);",
									"postman.setEnvironmentVariable(\"enduserC_gbp_ledger_sort_code\", jsonData.uk_sort_code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_gbp_enduserP}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_gbp_enduserP}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "4i. Add new Ledger for Enduser Company (EUR) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13d9359d-417c-403d-bc3a-5dae8af2b534",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ledger_eur_enduserC\", jsonData.ledger_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_company_id}}\",\r\n  \"partner_product\": \"PayrNet-EUR-1\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"ledger_type\": \"ledger-type-single-user\",\r\n  \"ledger_who_owns_assets\": \"ledger-assets-owned-by-me\",\r\n  \"ledger_primary_use_types\": [\"ledger-primary-use-types-payments\"],\r\n  \"ledger_t_and_cs_country_of_jurisdiction\": \"GB\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 2s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "4ii. Assign IBAN/BIC for EnduserC_EUR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2633274d-1413-4805-abe5-706557575073",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_eur_enduserC}}/assign-iban",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_eur_enduserC}}",
								"assign-iban"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 2s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "4iii. Fetch it Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d595307-2e14-444e-837b-6a97715d2af8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"enduserC_eur_ledger_bic_swift\", jsonData.bic_swift);",
									"postman.setEnvironmentVariable(\"enduserC_eur_ledger_iban\", jsonData.iban);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_eur_enduserC}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_eur_enduserC}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "4j. Update Ledger Copy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger1_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 5s//",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/5",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "4k. Get list of Ledgers that were modified from a specific time Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1a6fa793-633f-4cd6-8b32-54e2d0c1303c",
								"exec": [
									"var moment = require('moment')",
									"    postman.setGlobalVariable(\"timestamp-UtcIso8601\", moment().toISOString())",
									"    postman.setGlobalVariable(\"yesterday_timestamp-UtcIso8601\", moment().subtract(1, 'day').toISOString())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/changed?from_date={{yesterday_timestamp-UtcIso8601}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"changed"
							],
							"query": [
								{
									"key": "from_date",
									"value": "{{yesterday_timestamp-UtcIso8601}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4l. [Test for fail] Create virtual ledger with empty string Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67583dcc-3441-42a2-b3ea-99c0c0b93cdc",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"holder_id\": \"{{enduser_person_id}}\",\r\n  \"asset_class\": \"commodity\",\r\n  \"asset_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/virtual",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"virtual"
							]
						}
					},
					"response": []
				},
				{
					"name": "4m. Find Ledger based on IBAN Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be2574ab-024d-483c-b1ff-12cb4ac4dbb5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/by-iban?iban={{customer_eur_ledger_iban}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"by-iban"
							],
							"query": [
								{
									"key": "iban",
									"value": "{{customer_eur_ledger_iban}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4n. Find Ledger based on UK address Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01f1da36-5fd6-456a-9ec2-412ccfe6fdf9",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/by-uk-bank-account?uk_account_number={{customer_gbp_ledger_account_number}}&uk_sort_code={{customer_gbp_ledger_sort_code}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"by-uk-bank-account"
							],
							"query": [
								{
									"key": "uk_account_number",
									"value": "{{customer_gbp_ledger_account_number}}"
								},
								{
									"key": "uk_sort_code",
									"value": "{{customer_gbp_ledger_sort_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4o. List of all unassigned ledgers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"id": "bb9ea43d-2a2a-4169-b1e3-355a50272b41",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/unassigned",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"unassigned"
							]
						}
					},
					"response": []
				},
				{
					"name": "4p. Get Ledger entries in a specified time range Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f2cbedd-7a51-4cb5-8d53-6f36fa31b4b7",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/ledgers/{{ledger_gbp_customer}}/entries?starting_at_date={{yesterday_timestamp-UtcIso8601}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"ledgers",
								"{{ledger_gbp_customer}}",
								"entries"
							],
							"query": [
								{
									"key": "starting_at_date",
									"value": "{{yesterday_timestamp-UtcIso8601}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 5 - Beneficiaries",
			"item": [
				{
					"name": "5a. List all Beneficiary (25 per page) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "162b6207-734c-404c-9993-882b5d3624c1",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries?items_per_page=25",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							],
							"query": [
								{
									"key": "items_per_page",
									"value": "25"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5b. Create New Beneficiary (enduserP GBP) [customer holder]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aceb07c2-3964-40b4-9353-8f017cd3b5d9",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"beneficiary_id_CustToEnduserP_GBP\", jsonData.beneficiary_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"uk_account_number\": \"{{enduserP_gbp_ledger_account_number}}\",\n \"uk_sort_code\": \"{{enduserP_gbp_ledger_sort_code}}\",\n \"holder_id\": \"{{customer_id}}\",\n \"asset_class\": \"currency\",\n \"asset_type\": \"gbp\",\n \"person\": {\n   \"country_of_residence\": [\n     \"GB\"\n   ],\n   \"date_onboarded\": \"2015-11-21\",\n   \"email\": \"sallysmith@railsbank.com\",\n   \"name\": \"Sally Smith\",\n   \"address\": {\n     \"address_refinement\": \"Apartment 8\",\n     \"address_number\": \"6\",\n     \"address_street\": \"Harold Road\",\n     \"address_city\": \"London\",\n     \"address_region\": \"London\",\n     \"address_postal_code\": \"SE19 3PU\",\n     \"address_iso_country\": \"GB\"\n   },\n   \"telephone\": \"+44 22 626 2626\",\n   \"date_of_birth\": \"1970-11-05\",\n   \"nationality\": [\n     \"British\"\n   ]\n },\n \"beneficiary_meta\": {\n   \"foo\": \"baa\",\n   \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\n }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "This represents the entity where money can be sent.\n\nEvery transaction must point to an existing beneficiary. The customer’s compliance firewall will be run against the newly created entity.\n\nIf some attributes / documents are missing, this will be reflected by benficiary status and quarantine attribute."
					},
					"response": []
				},
				{
					"name": "5c. Fetch Beneficiary Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fb49e52-4dc3-419c-acb1-272ee4f77d63",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_CustToEnduserP_GBP}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_CustToEnduserP_GBP}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5d. Update Beneficiary (GBP) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "829e5361-f8b8-4687-8312-aacdc4362ac9",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"default_account\": {\n    \"bank_code_type\": \"sort-code\",\n    \"bank_code\": \"040052\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_CustToEnduserP_GBP}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_CustToEnduserP_GBP}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5e. Fetch Beneficiary Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fb49e52-4dc3-419c-acb1-272ee4f77d63",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_CustToEnduserP_GBP}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_CustToEnduserP_GBP}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5f. Create New Beneficiary (enduserC EUR) [enduserP holder]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09693826-110d-4fc9-8eba-794e43b0aba5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"beneficiary_id_EndPtoEndC_EUR\", jsonData.beneficiary_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"iban\": \"{{enduserC_eur_ledger_iban}}\",\r\n  \"bicswift\": \"{{enduserC_eur_ledger_bic_swift}}\",\r\n  \"holder_id\": \"{{enduser_person_id}}\",\r\n  \"asset_class\": \"currency\",\r\n  \"asset_type\": \"eur\",\r\n  \"company\": {\r\n    \"country_of_residence\": [\r\n      \"GB\"\r\n    ],\r\n    \"address_history\": [\r\n      {\r\n        \"address_refinement\": \"Apartment 77\",\r\n        \"address_number\": \"42\",\r\n        \"address_street\": \"Kirschbaumstraße\",\r\n        \"address_city\": \"Berlin\",\r\n        \"address_region\": \"Bremen\",\r\n        \"address_postal_code\": \"12059\",\r\n        \"address_iso_country\": \"DE\",\r\n        \"address_start_date\": \"2000-09-02\",\r\n        \"address_end_date\": \"2002-12-20\"\r\n      }\r\n    ],\r\n    \"date_onboarded\": \"2015-11-21\",\r\n    \"email\": \"icecream@example.net\",\r\n    \"name\": \"John's Ice Creams Ltd\",\r\n    \"address\": {\r\n      \"address_refinement\": \"Apartment 42\",\r\n      \"address_number\": \"29\",\r\n      \"address_street\": \"Acacia Road\",\r\n      \"address_city\": \"Dinslaken\",\r\n      \"address_region\": \"Bremen\",\r\n      \"address_postal_code\": \"FX20 7XS\",\r\n      \"address_iso_country\": \"DE\"\r\n    },\r\n    \"telephone\": \"+44 22 626 2626\",\r\n    \"date_of_birth\": \"1970-11-05\",\r\n    \"nationality\": [\r\n      \"Czech\"\r\n    ]\r\n  },\r\n  \"beneficiary_meta\": {\r\n    \"foo\": \"baa\",\r\n    \"our_salesforce_reference\": \"http://na1.salesforce.com/5003000000D8cuI\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries"
							]
						},
						"description": "This represents the entity where money can be sent.\n\nEvery transaction must point to an existing beneficiary. The customer’s compliance firewall will be run against the newly created entity.\n\nIf some attributes / documents are missing, this will be reflected by benficiary status and quarantine attribute."
					},
					"response": []
				},
				{
					"name": "5g. Fetch Beneficiary Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fb49e52-4dc3-419c-acb1-272ee4f77d63",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5h. Update Beneficiary (EUR) Copy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"default_account\": {\n   \"iban\":  \"{{enduserC_eur_ledger_iban}}\"\n }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5i. Fetch Beneficiary Copy Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fb49e52-4dc3-419c-acb1-272ee4f77d63",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5j. Create New Account for Beneficiary (GBP) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15492fd5-ee5e-4adc-adf3-2201392b919a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"beneficiary_account_id\", jsonData.account_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"account_number\": \"{{enduserC_gbp_ledger_account_number}}\",\r\n  \"bank_country\": \"GB\",\r\n  \"bank_code\": \"{{enduserC_gbp_ledger_sort_code}}\",\r\n  \"bank_name\": \"PayrNET\",\r\n  \"asset_type\": \"gbp\",\r\n  \"asset_class\": \"currency\",\r\n  \"bank_code_type\": \"sort-code\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/accounts",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"accounts"
							]
						},
						"description": "asset_class:\n[ commodity, currency ]\n\nasset_type:\n[ aud, chf, cad, sek, goldbloc, usd, nok, whisky, jpy, nzd, gold, gbp, eur ]\n\n\nbank_code_type:\n[ routing-number, aba, sort-code, zengin-code, bsb ]"
					},
					"response": []
				},
				{
					"name": "5k. Return accounts of Beneficiary Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "651cd370-926d-4192-82d0-148f12f58584",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/accounts",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "5l. Return account for Beneficiary* (bene_id and acc_id) Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/accounts/{{beneficiary_account_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"accounts",
								"{{beneficiary_account_id}}"
							]
						},
						"description": "(if you dont want to povide beneficiary-id there is endpoint that require only account-id)"
					},
					"response": []
				},
				{
					"name": "5m. Update existing account for Beneficiary Copy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_number\": \"{{enduserC_gbp_ledger_account_number}}\",\n  \"bank_country\": \"GB\",\n  \"bank_code\": \"{{enduserC_gbp_ledger_sort_code}}\",\n  \"bank_name\": \"PayrNET\",\n  \"asset_type\": \"gbp\",\n  \"asset_class\": \"currency\",\n  \"bank_code_type\": \"sort-code\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/accounts/{{beneficiary_account_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"accounts",
								"{{beneficiary_account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5n. Change default account of Beneficiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "223c2af1-895a-4378-9d05-74552d270dd5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/accounts/{{beneficiary_account_id}}/make-default",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"accounts",
								"{{beneficiary_account_id}}",
								"make-default"
							]
						}
					},
					"response": []
				},
				{
					"name": "5o. Fetch latest f/w calc report for Beneficiary Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd7047b6-c5c3-47fc-bedb-42fe59b18f73",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/compliance-firewall-calculation",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"compliance-firewall-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "5p. Move existing Beneficiary from missing data to state which will rerun firewalls Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be33f3f0-bfe6-4f1f-939b-941c88776278",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"rerun-firewall"
							]
						}
					},
					"response": []
				},
				{
					"name": "5q. Wait until Beneficiary will be in final state Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fe1ce57-ed7a-4225-9956-30bb171b1cf3",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiaries/{{beneficiary_id_EndPtoEndC_EUR}}/wait",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiaries",
								"{{beneficiary_id_EndPtoEndC_EUR}}",
								"wait"
							]
						}
					},
					"response": []
				},
				{
					"name": "5r. Return account for Beneficiary* (acc_id only) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09e641fa-1530-47f9-a586-02b78fea83a5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/beneficiary-accounts/{{beneficiary_account_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"beneficiary-accounts",
								"{{beneficiary_account_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 6 - Transactions",
			"item": [
				{
					"name": "6a. Standard Transaction (Funded to Unfunded)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f5ff066-c20f-4727-af85-0386ff1f9765",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"transaction_id_funded_to_unfunded\", jsonData.transaction_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-UK-FasterPayments\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"1\",\n\t\"ledger_from_id\": \"5bed3df1-9fb6-4c23-8d61-814a0e61113c\",\n    \"beneficiary_id\": \"{{bene_id_funded_to_other}}\"\n  }\t\n"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "6b. Fetch transaction object Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d34fd404-e3f9-4f2d-bde9-11d179799763",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id_funded_to_unfunded}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id_funded_to_unfunded}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6c. Standard Transaction (Unfunded to funded) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f5ff066-c20f-4727-af85-0386ff1f9765",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"transaction_id_unfunded_to_funded\", jsonData.transaction_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-UK-FasterPayments\",\n    \"reference\": \"back to you bro\",\n    \"amount\": \"1\",\n\t\"ledger_from_id\": \"{{FIXED_OTHER_LEDGER_ID}}\",\n    \"beneficiary_id\": \"{{bene_id_other_to_funded}}\"\n  }\t\n"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "6b. Fetch transaction object Copy Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id_unfunded_to_funded}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id_unfunded_to_funded}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6d. Test for failure - zero amount transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f5ff066-c20f-4727-af85-0386ff1f9765",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Amount not positve\"] = jsonData.error_detail === \"amount-not-positive\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-UK-FasterPayments\",\n    \"reference\": \"back to you bro\",\n    \"amount\": \"0\",\n\t\"ledger_from_id\": \"{{FIXED_OTHER_LEDGER_ID}}\",\n    \"beneficiary_id\": \"{{bene_id_other_to_funded}}\"\n  }\t\n"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "6e. Create new inter-ledger transaction Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "145d89b7-18ef-46f6-8feb-631a6182faf8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"interledger_transaction_id_funded_to_unfunded\", jsonData.transaction_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_to_id\": \"{{FIXED_OTHER_LEDGER_ID}}\",\n  \"ledger_from_id\": \"{{FIXED_FUNDED_LEDGER_ID}}\",\n  \"amount\": \"1\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger"
							]
						}
					},
					"response": []
				},
				{
					"name": "6f. Fetch transaction object Copy Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ad1f857-d9a6-4341-b484-25423ddb15fd",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{interledger_transaction_id_funded_to_unfunded}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{interledger_transaction_id_funded_to_unfunded}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6g. Create new inter-ledger transaction Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "145d89b7-18ef-46f6-8feb-631a6182faf8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"interledger_transaction_id_unfunded_to_funded\", jsonData.transaction_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_to_id\": \"{{FIXED_FUNDED_LEDGER_ID}}\",\n  \"ledger_from_id\": \"{{FIXED_OTHER_LEDGER_ID}}\",\n  \"amount\": \"1\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger"
							]
						}
					},
					"response": []
				},
				{
					"name": "6h. Fetch transaction object Copy Copy Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ad1f857-d9a6-4341-b484-25423ddb15fd",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{interledger_transaction_id_unfunded_to_funded}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{interledger_transaction_id_unfunded_to_funded}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6i. Standard Transaction (Funded to Unfunded) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f5ff066-c20f-4727-af85-0386ff1f9765",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_type\": \"payment-type-UK-FasterPayments\",\n    \"reference\": \"exampleReference\",\n    \"amount\": \"1\",\n\t\"ledger_from_id\": \"5bed3df1-9fb6-4c23-8d61-814a0e61113c\",\n    \"beneficiary_id\": \"{{bene_id_funded_to_other}}\"\n  }\t\n"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/try",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"try"
							]
						}
					},
					"response": []
				},
				{
					"name": "6j. Create new inter-ledger transaction Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "145d89b7-18ef-46f6-8feb-631a6182faf8",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ledger_to_id\": \"{{FIXED_OTHER_LEDGER_ID}}\",\n  \"ledger_from_id\": \"{{FIXED_FUNDED_LEDGER_ID}}\",\n  \"amount\": \"1\",\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/inter-ledger/try",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"inter-ledger",
								"try"
							]
						}
					},
					"response": []
				},
				{
					"name": "//Delay 2s//",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"id": "2bfb4859-ea8e-4050-9b93-131d4511a4cc",
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"id": "adff4a29-c4f1-4746-b644-c1b309fa69c9",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/delay/2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "6k. Move existing transaction from missing data state which will rerun firewalls",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f5c8a46-19ac-4eac-9b68-3323e854cb89",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id_funded_to_unfunded}}/rerun-firewall",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id_funded_to_unfunded}}",
								"rerun-firewall"
							]
						},
						"description": "from ledger id to second ledger id"
					},
					"response": []
				},
				{
					"name": "13. Update existing transaction meta data Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59a36d1a-f00d-4b2f-96a5-d39c31e78ed7",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{customer_api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction_meta\": {\n    \"foo\": \"bar\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/customer/transactions/{{transaction_id_funded_to_unfunded}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"customer",
								"transactions",
								"{{transaction_id_funded_to_unfunded}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 8 - Compliance+Quarantine",
			"item": [
				{
					"name": "A) Compliance",
					"item": [
						{
							"name": "8Aa. Set contact information for Customer's compliance officer Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e01343f9-4ae3-42d8-b36b-15e3af273d76",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"mail@example.com\",\n  \"slack_domain\": \"abcdefghijklmnopqrstuvwxyz\",\n  \"slack_channel\": \"abcdefghijklmnopqrstuvwxyz\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-contact",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Ab. Get contact information for Customer's compliance officer Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86680f9c-3db3-4b6e-b1b4-8155d0991262",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-contact",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Ac. Set / Update Firewall rules (Beneficiaries) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9737a0cf-924a-42f1-9110-f84a929ed8bc",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"firewall_id_beneficiaries\", jsonData.firewall_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compliance_firewall_rules\": \"[rule :always-pass ok]\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"beneficiaries"
									]
								},
								"description": "Set/update firewall rules. The firewall rules are coded in special lisp-like syntax\nand are executed whenever customer creates new enduser or new transaction. The\nfirewall type configures, which of these options the firewall should verify.\nPlease keep in mind that any update of rules, even submitting the same data, leads to use of all current datasets.\nThis can lead to different firewall results, even if the rules themselves have not been altered"
							},
							"response": []
						},
						{
							"name": "8Ad. Set / Update Firewall rules (Transactions) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01eee7cf-fa62-4cc2-8431-462122fe8deb",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"firewall_id_transactions\", jsonData.firewall_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compliance_firewall_rules\": \"[rule :always-pass ok]\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions"
									]
								},
								"description": "Set/update firewall rules. The firewall rules are coded in special lisp-like syntax\nand are executed whenever customer creates new enduser or new transaction. The\nfirewall type configures, which of these options the firewall should verify.\nPlease keep in mind that any update of rules, even submitting the same data, leads to use of all current datasets.\nThis can lead to different firewall results, even if the rules themselves have not been altered"
							},
							"response": []
						},
						{
							"name": "8Ae. Set / Update Firewall rules (Endusers) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69e35433-764c-457d-8ddd-182762843482",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"firewall_id_endusers\", jsonData.firewall_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compliance_firewall_rules\": \"[rule :always-pass ok]\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"endusers"
									]
								},
								"description": "Set/update firewall rules. The firewall rules are coded in special lisp-like syntax\nand are executed whenever customer creates new enduser or new transaction. The\nfirewall type configures, which of these options the firewall should verify.\nPlease keep in mind that any update of rules, even submitting the same data, leads to use of all current datasets.\nThis can lead to different firewall results, even if the rules themselves have not been altered"
							},
							"response": []
						},
						{
							"name": "8Af. Get Firewall rules (Beneficiaries) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3fbe819-7b32-4578-a6e6-fb39b493a7d2",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"beneficiaries"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Ag. Get Firewall rules (Transactions) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "423a4120-bda5-4c8f-8e38-1fcf27a8ed4c",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Ah. Get Firewall rules (Endusers) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6bdb1b38-7444-42f1-80a1-a7b14e59ba20",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"endusers"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Ai. Get firewall rules history (Beneficiaries) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92892af5-062f-4b03-a30c-6c638c182035",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/beneficiaries/history",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"beneficiaries",
										"history"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Aj. Get firewall rules history (Transactions) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "223ccdc7-cc41-4a49-939c-a5e000d4287e",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions/history",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions",
										"history"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Ak. Get firewall rules history (Endusers) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0bbce64-8cb8-41b9-8b67-f9ea5fefe12d",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/endusers/history",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"endusers",
										"history"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Al. Create Firewall dataset Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "862532f4-4900-47c9-9155-37d396cffa22",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"firewall_dataset_id\", jsonData.dataset_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dataset_data\": \"Country,Risk\\nUSA,low\\nISR,high\",\n  \"dataset_name\": \"countries-by-risk-level\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-static-data",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-static-data"
									]
								}
							},
							"response": []
						},
						{
							"name": "8Am. Read Firewall dataset Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-static-data/{{firewall_dataset_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-static-data",
										"{{firewall_dataset_id}}"
									]
								},
								"description": "Read firewall dataset. The dataset should consist of CSV data in a string. Rows\nand columns can be used to query individual data in the dataset. The dataset is\naccesible by the given name, which must be unique for semantically different\ndatasets."
							},
							"response": []
						},
						{
							"name": "8An. Get compliance manual that includes all the Firewalls and related data Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c1eca68-7bc6-4617-aa7c-58dd66d4dfd5",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-manual",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-manual"
									]
								}
							},
							"response": []
						},
						{
							"name": "8 Last. Test Firewall rules (Transactions) Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{customer_api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compliance_firewall_rules\": \"[rules [rule :rule-name (fn data)]]\",\n  \"transaction_id\": \"{{transaction_id}}\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/compliance-firewall-rules/transactions/test",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"compliance-firewall-rules",
										"transactions",
										"test"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "B) Quarantine",
					"item": [
						{
							"name": "1. List all objects (transactions,endusers) in quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f305082-3c3f-41fa-842e-5b62b53c3c8a",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. List all Beneficiaries in the quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d995f3ad-1f44-4609-8e78-2323d65766aa",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"beneficiaries"
									]
								},
								"description": "(ordered by creation date)"
							},
							"response": []
						},
						{
							"name": "3. Fetch quarantine for Beneficiary Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bf5ad12-11f4-48bf-b473-8b4e38e6282f",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id_CustToEnduserP_GBP}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"beneficiaries",
										"{{beneficiary_id_CustToEnduserP_GBP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Comment beneficiary in quarantine (transaction,enduser) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce22be30-cbb4-4747-b80f-a78dbbedb34a",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"single line comment\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id_CustToEnduserP_GBP}}/comments",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"beneficiaries",
										"{{beneficiary_id_CustToEnduserP_GBP}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Resolve object Beneficiary in quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f5c80ce5-62f5-4685-98f3-611e65b2e075",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"invalid-state-of-entity\"] = jsonData.error === \"invalid-state-of-entity\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"single line comment\",\n  \"qr_status\": \"pass\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/beneficiaries/{{beneficiary_id_CustToEnduserP_GBP}}/resolve",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"beneficiaries",
										"{{beneficiary_id_CustToEnduserP_GBP}}",
										"resolve"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. List all Endusers in the quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ad28d6f-9235-436f-ad5b-4dd28f7234c9",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/endusers",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"endusers"
									]
								},
								"description": "ordered by entity creation date"
							},
							"response": []
						},
						{
							"name": "7. Fetch quarantine for Enduser Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16b92d33-ec35-41b6-a7e8-67212420e07d",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_person_id}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"endusers",
										"{{enduser_person_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Comment Enduser in quarantine (transactions,enduser) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9356d6bf-6b16-4ffd-9a76-5c25d458f110",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"single line comment\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_person_id}}/comments",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"endusers",
										"{{enduser_person_id}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "9. Resolve object Enduser in quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc433410-4777-411d-8451-5f27bb413d6d",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"invalid-state-of-entity\"] = jsonData.error === \"invalid-state-of-entity\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"single line comment\",\n  \"qr_status\": \"pass\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/endusers/{{enduser_person_id}}/resolve",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"endusers",
										"{{enduser_person_id}}",
										"resolve"
									]
								}
							},
							"response": []
						},
						{
							"name": "10. List all transactions in the quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f9f8943-eaa4-4b71-875a-3934341ac059",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/transactions",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"transactions"
									]
								},
								"description": "ordered by entity creation date"
							},
							"response": []
						},
						{
							"name": "*****11. Fetch quarantine for transaction Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd834a48-7fef-46cf-bb75-5dbc9ce6e8cc",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id_funded_to_unfunded}}",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"transactions",
										"{{transaction_id_funded_to_unfunded}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "*****12. Comment transaction in quarantine (transaction,enduser) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a012e9f4-8336-46e0-8a14-3edcfee61a4e",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"CORS is present\"] = postman.getResponseHeader(\"access-control-allow-origin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"single line comment\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}/comments",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"transactions",
										"{{transaction_id}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "*****13. Resolve transaction in quarantine Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "172f2a3a-30d2-40a9-8b4f-e69225a17c1c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"invalid-state-of-entity\"] = jsonData.error === \"invalid-state-of-entity\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{customer_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"single line comment\",\n  \"qr_status\": \"pass\"\n}"
								},
								"url": {
									"raw": "{{baseurl}}/v1/customer/quarantine/transactions/{{transaction_id}}/resolve",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"v1",
										"customer",
										"quarantine",
										"transactions",
										"{{transaction_id}}",
										"resolve"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "99ac24f0-c85a-47a9-9df1-d16e53419f57",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a3450d29-87f1-4770-856a-ad4a39a79156",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}